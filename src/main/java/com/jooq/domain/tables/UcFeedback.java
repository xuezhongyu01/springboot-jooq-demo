/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.UcFeedbackRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 意见反馈
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcFeedback extends TableImpl<UcFeedbackRecord> {

    private static final long serialVersionUID = 736199212;

    /**
     * The reference instance of <code>xbkj.uc_feedback</code>
     */
    public static final UcFeedback UC_FEEDBACK = new UcFeedback();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcFeedbackRecord> getRecordType() {
        return UcFeedbackRecord.class;
    }

    /**
     * The column <code>xbkj.uc_feedback.id</code>. id
     */
    public final TableField<UcFeedbackRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>xbkj.uc_feedback.content</code>. 意见
     */
    public final TableField<UcFeedbackRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "意见");

    /**
     * The column <code>xbkj.uc_feedback.mobile_email</code>. 手机号或邮箱
     */
    public final TableField<UcFeedbackRecord, String> MOBILE_EMAIL = createField("mobile_email", org.jooq.impl.SQLDataType.VARCHAR(40).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "手机号或邮箱");

    /**
     * The column <code>xbkj.uc_feedback.images</code>. 图片链接,逗号分割
     */
    public final TableField<UcFeedbackRecord, String> IMAGES = createField("images", org.jooq.impl.SQLDataType.CLOB, this, "图片链接,逗号分割");

    /**
     * The column <code>xbkj.uc_feedback.create_at</code>. 创建时间
     */
    public final TableField<UcFeedbackRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_feedback.update_at</code>. 更新时间
     */
    public final TableField<UcFeedbackRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_feedback.del_flag</code>. 删除标志
     */
    public final TableField<UcFeedbackRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_feedback.version</code>.
     */
    public final TableField<UcFeedbackRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_feedback</code> table reference
     */
    public UcFeedback() {
        this(DSL.name("uc_feedback"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_feedback</code> table reference
     */
    public UcFeedback(String alias) {
        this(DSL.name(alias), UC_FEEDBACK);
    }

    /**
     * Create an aliased <code>xbkj.uc_feedback</code> table reference
     */
    public UcFeedback(Name alias) {
        this(alias, UC_FEEDBACK);
    }

    private UcFeedback(Name alias, Table<UcFeedbackRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcFeedback(Name alias, Table<UcFeedbackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "意见反馈");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcFeedbackRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_FEEDBACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcFeedbackRecord> getPrimaryKey() {
        return Keys.KEY_UC_FEEDBACK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcFeedbackRecord>> getKeys() {
        return Arrays.<UniqueKey<UcFeedbackRecord>>asList(Keys.KEY_UC_FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcFeedback as(String alias) {
        return new UcFeedback(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcFeedback as(Name alias) {
        return new UcFeedback(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcFeedback rename(String name) {
        return new UcFeedback(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcFeedback rename(Name name) {
        return new UcFeedback(name, null);
    }
}
