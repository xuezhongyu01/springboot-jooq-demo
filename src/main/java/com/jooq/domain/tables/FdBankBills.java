/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdBankBillsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 信用卡额度(数组)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdBankBills extends TableImpl<FdBankBillsRecord> {

    private static final long serialVersionUID = 990430839;

    /**
     * The reference instance of <code>xbkj.fd_bank_bills</code>
     */
    public static final FdBankBills FD_BANK_BILLS = new FdBankBills();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdBankBillsRecord> getRecordType() {
        return FdBankBillsRecord.class;
    }

    /**
     * The column <code>xbkj.fd_bank_bills.id</code>. 主键
     */
    public final TableField<FdBankBillsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_bank_bills.account_id</code>. 账户ID(关联字段)
     */
    public final TableField<FdBankBillsRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "账户ID(关联字段)");

    /**
     * The column <code>xbkj.fd_bank_bills.begin_date</code>. 账单开始日
     */
    public final TableField<FdBankBillsRecord, String> BEGIN_DATE = createField("begin_date", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单开始日");

    /**
     * The column <code>xbkj.fd_bank_bills.end_date</code>. 账单结束日
     */
    public final TableField<FdBankBillsRecord, String> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单结束日");

    /**
     * The column <code>xbkj.fd_bank_bills.bill_date</code>. 账单出账日
     */
    public final TableField<FdBankBillsRecord, String> BILL_DATE = createField("bill_date", org.jooq.impl.SQLDataType.VARCHAR(64), this, "账单出账日");

    /**
     * The column <code>xbkj.fd_bank_bills.bill_type</code>. 账单类型 ： 0 （已出账单）， 1 （未出账单），null
     */
    public final TableField<FdBankBillsRecord, String> BILL_TYPE = createField("bill_type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单类型 ： 0 （已出账单）， 1 （未出账单），null");

    /**
     * The column <code>xbkj.fd_bank_bills.repay_date</code>. 账单还款日
     */
    public final TableField<FdBankBillsRecord, String> REPAY_DATE = createField("repay_date", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单还款日");

    /**
     * The column <code>xbkj.fd_bank_bills.currency</code>. 币种(中文，参见币种字典)
     */
    public final TableField<FdBankBillsRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR(32), this, "币种(中文，参见币种字典)");

    /**
     * The column <code>xbkj.fd_bank_bills.payment</code>. 账单金额
     */
    public final TableField<FdBankBillsRecord, String> PAYMENT = createField("payment", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单金额");

    /**
     * The column <code>xbkj.fd_bank_bills.least_payment</code>. 账单最低还款额
     */
    public final TableField<FdBankBillsRecord, String> LEAST_PAYMENT = createField("least_payment", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单最低还款额");

    /**
     * The column <code>xbkj.fd_bank_bills.previous_payment</code>. 上期账单金额(单位：分)
     */
    public final TableField<FdBankBillsRecord, String> PREVIOUS_PAYMENT = createField("previous_payment", org.jooq.impl.SQLDataType.VARCHAR(32), this, "上期账单金额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_bills.previous_repayment</code>. 上期还款金额(单位：分)
     */
    public final TableField<FdBankBillsRecord, String> PREVIOUS_REPAYMENT = createField("previous_repayment", org.jooq.impl.SQLDataType.VARCHAR(32), this, "上期还款金额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_bills.adjustment_amount</code>. 本期调整金额(单位：分)
     */
    public final TableField<FdBankBillsRecord, String> ADJUSTMENT_AMOUNT = createField("adjustment_amount", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本期调整金额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_bills.cycle_interest</code>. 循环利息(单位：分)
     */
    public final TableField<FdBankBillsRecord, String> CYCLE_INTEREST = createField("cycle_interest", org.jooq.impl.SQLDataType.VARCHAR(32), this, "循环利息(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_bills.arrears</code>. 本期剩余欠款(单位：分)
     */
    public final TableField<FdBankBillsRecord, String> ARREARS = createField("arrears", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本期剩余欠款(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_bills.bill_calc</code>. 账单计算公式
     */
    public final TableField<FdBankBillsRecord, String> BILL_CALC = createField("bill_calc", org.jooq.impl.SQLDataType.VARCHAR(64), this, "账单计算公式");

    /**
     * The column <code>xbkj.fd_bank_bills.bill_cycle</code>. 账单周期
     */
    public final TableField<FdBankBillsRecord, String> BILL_CYCLE = createField("bill_cycle", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账单周期");

    /**
     * The column <code>xbkj.fd_bank_bills.credited_amount</code>. 未出账单已入账金额(单位：分)
     */
    public final TableField<FdBankBillsRecord, String> CREDITED_AMOUNT = createField("credited_amount", org.jooq.impl.SQLDataType.VARCHAR(32), this, "未出账单已入账金额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_bills.payed_amount</code>. 本期已还
     */
    public final TableField<FdBankBillsRecord, String> PAYED_AMOUNT = createField("payed_amount", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本期已还");

    /**
     * The column <code>xbkj.fd_bank_bills.create_at</code>. 创建时间
     */
    public final TableField<FdBankBillsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_bank_bills.update_at</code>. 更新时间
     */
    public final TableField<FdBankBillsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_bank_bills.del_flag</code>. 删除标志
     */
    public final TableField<FdBankBillsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_bank_bills.version</code>.
     */
    public final TableField<FdBankBillsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_bank_bills</code> table reference
     */
    public FdBankBills() {
        this(DSL.name("fd_bank_bills"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_bank_bills</code> table reference
     */
    public FdBankBills(String alias) {
        this(DSL.name(alias), FD_BANK_BILLS);
    }

    /**
     * Create an aliased <code>xbkj.fd_bank_bills</code> table reference
     */
    public FdBankBills(Name alias) {
        this(alias, FD_BANK_BILLS);
    }

    private FdBankBills(Name alias, Table<FdBankBillsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdBankBills(Name alias, Table<FdBankBillsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "信用卡额度(数组)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_BANK_BILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdBankBillsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_BANK_BILLS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdBankBillsRecord> getPrimaryKey() {
        return Keys.KEY_FD_BANK_BILLS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdBankBillsRecord>> getKeys() {
        return Arrays.<UniqueKey<FdBankBillsRecord>>asList(Keys.KEY_FD_BANK_BILLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdBankBills as(String alias) {
        return new FdBankBills(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdBankBills as(Name alias) {
        return new FdBankBills(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdBankBills rename(String name) {
        return new FdBankBills(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdBankBills rename(Name name) {
        return new FdBankBills(name, null);
    }
}
