/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables.records;


import com.jooq.domain.tables.FdProviderSilentInfos;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 静默信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderSilentInfosRecord extends UpdatableRecordImpl<FdProviderSilentInfosRecord> implements Record10<Long, Long, String, String, String, String, Timestamp, Timestamp, Boolean, Long> {

    private static final long serialVersionUID = 1679909341;

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.id</code>. 主键
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.account_id</code>. 账户id
     */
    public void setAccountId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.account_id</code>. 账户id
     */
    public Long getAccountId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.period</code>. 时间范围（1个月/3个月/6个月）
     */
    public void setPeriod(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.period</code>. 时间范围（1个月/3个月/6个月）
     */
    public String getPeriod() {
        return (String) get(2);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.count</code>. 天数
     */
    public void setCount(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.count</code>. 天数
     */
    public String getCount() {
        return (String) get(3);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.days</code>. 日期列表（无通话记录的日期）
     */
    public void setDays(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.days</code>. 日期列表（无通话记录的日期）
     */
    public String getDays() {
        return (String) get(4);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.max_continuous_count</code>. 最大连续无通话记录天数
     */
    public void setMaxContinuousCount(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.max_continuous_count</code>. 最大连续无通话记录天数
     */
    public String getMaxContinuousCount() {
        return (String) get(5);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.create_at</code>. 创建时间
     */
    public void setCreateAt(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.create_at</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.update_at</code>. 更新时间
     */
    public void setUpdateAt(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.del_flag</code>. 删除标志
     */
    public void setDelFlag(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.del_flag</code>. 删除标志
     */
    public Boolean getDelFlag() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>xbkj.fd_provider_silent_infos.version</code>.
     */
    public void setVersion(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_silent_infos.version</code>.
     */
    public Long getVersion() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Long, String, String, String, String, Timestamp, Timestamp, Boolean, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Long, String, String, String, String, Timestamp, Timestamp, Boolean, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.PERIOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.DAYS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.MAX_CONTINUOUS_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.CREATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPeriod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDays();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getMaxContinuousCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPeriod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDays();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMaxContinuousCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value2(Long value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value3(String value) {
        setPeriod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value4(String value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value5(String value) {
        setDays(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value6(String value) {
        setMaxContinuousCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value7(Timestamp value) {
        setCreateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value8(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value9(Boolean value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord value10(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderSilentInfosRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6, Timestamp value7, Timestamp value8, Boolean value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FdProviderSilentInfosRecord
     */
    public FdProviderSilentInfosRecord() {
        super(FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS);
    }

    /**
     * Create a detached, initialised FdProviderSilentInfosRecord
     */
    public FdProviderSilentInfosRecord(Long id, Long accountId, String period, String count, String days, String maxContinuousCount, Timestamp createAt, Timestamp updateAt, Boolean delFlag, Long version) {
        super(FdProviderSilentInfos.FD_PROVIDER_SILENT_INFOS);

        set(0, id);
        set(1, accountId);
        set(2, period);
        set(3, count);
        set(4, days);
        set(5, maxContinuousCount);
        set(6, createAt);
        set(7, updateAt);
        set(8, delFlag);
        set(9, version);
    }
}
