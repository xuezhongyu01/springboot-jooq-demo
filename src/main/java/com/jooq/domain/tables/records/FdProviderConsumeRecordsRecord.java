/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables.records;


import com.jooq.domain.tables.FdProviderConsumeRecords;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 月消费记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderConsumeRecordsRecord extends UpdatableRecordImpl<FdProviderConsumeRecordsRecord> implements Record12<Long, Long, Timestamp, Long, String, String, String, String, Timestamp, Timestamp, Boolean, Long> {

    private static final long serialVersionUID = -396825378;

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.id</code>. 主键
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.id</code>. 主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.account_id</code>. 账户id
     */
    public void setAccountId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.account_id</code>. 账户id
     */
    public Long getAccountId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.month</code>. 月份("YYYY-MM")
     */
    public void setMonth(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.month</code>. 月份("YYYY-MM")
     */
    public Timestamp getMonth() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.amount</code>. 金额(分)
     */
    public void setAmount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.amount</code>. 金额(分)
     */
    public Long getAmount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.is_exceed_plan</code>. 是否超出套餐
     */
    public void setIsExceedPlan(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.is_exceed_plan</code>. 是否超出套餐
     */
    public String getIsExceedPlan() {
        return (String) get(4);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.exceed_plan_rate</code>. 超出金额占比
     */
    public void setExceedPlanRate(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.exceed_plan_rate</code>. 超出金额占比
     */
    public String getExceedPlanRate() {
        return (String) get(5);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.is_remission</code>. 是否费用减免
     */
    public void setIsRemission(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.is_remission</code>. 是否费用减免
     */
    public String getIsRemission() {
        return (String) get(6);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.remission_rate</code>. 费用减免金额占比
     */
    public void setRemissionRate(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.remission_rate</code>. 费用减免金额占比
     */
    public String getRemissionRate() {
        return (String) get(7);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.create_at</code>. 创建时间
     */
    public void setCreateAt(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.create_at</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.update_at</code>. 更新时间
     */
    public void setUpdateAt(Timestamp value) {
        set(9, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(9);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.del_flag</code>. 删除标志
     */
    public void setDelFlag(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.del_flag</code>. 删除标志
     */
    public Boolean getDelFlag() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>xbkj.fd_provider_consume_records.version</code>.
     */
    public void setVersion(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>xbkj.fd_provider_consume_records.version</code>.
     */
    public Long getVersion() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Long, Long, Timestamp, Long, String, String, String, String, Timestamp, Timestamp, Boolean, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<Long, Long, Timestamp, Long, String, String, String, String, Timestamp, Timestamp, Boolean, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.MONTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.IS_EXCEED_PLAN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.EXCEED_PLAN_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.IS_REMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.REMISSION_RATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.CREATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field11() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.DEL_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getMonth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getIsExceedPlan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getExceedPlanRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIsRemission();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getRemissionRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component11() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getMonth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getIsExceedPlan();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getExceedPlanRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIsRemission();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getRemissionRate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getCreateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value11() {
        return getDelFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value2(Long value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value3(Timestamp value) {
        setMonth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value4(Long value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value5(String value) {
        setIsExceedPlan(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value6(String value) {
        setExceedPlanRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value7(String value) {
        setIsRemission(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value8(String value) {
        setRemissionRate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value9(Timestamp value) {
        setCreateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value10(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value11(Boolean value) {
        setDelFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord value12(Long value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderConsumeRecordsRecord values(Long value1, Long value2, Timestamp value3, Long value4, String value5, String value6, String value7, String value8, Timestamp value9, Timestamp value10, Boolean value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FdProviderConsumeRecordsRecord
     */
    public FdProviderConsumeRecordsRecord() {
        super(FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS);
    }

    /**
     * Create a detached, initialised FdProviderConsumeRecordsRecord
     */
    public FdProviderConsumeRecordsRecord(Long id, Long accountId, Timestamp month, Long amount, String isExceedPlan, String exceedPlanRate, String isRemission, String remissionRate, Timestamp createAt, Timestamp updateAt, Boolean delFlag, Long version) {
        super(FdProviderConsumeRecords.FD_PROVIDER_CONSUME_RECORDS);

        set(0, id);
        set(1, accountId);
        set(2, month);
        set(3, amount);
        set(4, isExceedPlan);
        set(5, exceedPlanRate);
        set(6, isRemission);
        set(7, remissionRate);
        set(8, createAt);
        set(9, updateAt);
        set(10, delFlag);
        set(11, version);
    }
}
