/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdFundAccountsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 公积金账户信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdFundAccounts extends TableImpl<FdFundAccountsRecord> {

    private static final long serialVersionUID = 47001982;

    /**
     * The reference instance of <code>xbkj.fd_fund_accounts</code>
     */
    public static final FdFundAccounts FD_FUND_ACCOUNTS = new FdFundAccounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdFundAccountsRecord> getRecordType() {
        return FdFundAccountsRecord.class;
    }

    /**
     * The column <code>xbkj.fd_fund_accounts.id</code>. 账户 ID
     */
    public final TableField<FdFundAccountsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "账户 ID");

    /**
     * The column <code>xbkj.fd_fund_accounts.member_id</code>.
     */
    public final TableField<FdFundAccountsRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xbkj.fd_fund_accounts.customer</code>. 客户号
     */
    public final TableField<FdFundAccountsRecord, String> CUSTOMER = createField("customer", org.jooq.impl.SQLDataType.VARCHAR(32), this, "客户号");

    /**
     * The column <code>xbkj.fd_fund_accounts.name</code>. 姓名
     */
    public final TableField<FdFundAccountsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(32), this, "姓名");

    /**
     * The column <code>xbkj.fd_fund_accounts.idcard</code>. 身份证号码
     */
    public final TableField<FdFundAccountsRecord, String> IDCARD = createField("idcard", org.jooq.impl.SQLDataType.VARCHAR(32), this, "身份证号码");

    /**
     * The column <code>xbkj.fd_fund_accounts.balance</code>. 当前账户余额
     */
    public final TableField<FdFundAccountsRecord, String> BALANCE = createField("balance", org.jooq.impl.SQLDataType.VARCHAR(20), this, "当前账户余额");

    /**
     * The column <code>xbkj.fd_fund_accounts.last_record_date</code>. 最近一次缴存日期
     */
    public final TableField<FdFundAccountsRecord, Timestamp> LAST_RECORD_DATE = createField("last_record_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近一次缴存日期");

    /**
     * The column <code>xbkj.fd_fund_accounts.status</code>. 当前账户状态
     */
    public final TableField<FdFundAccountsRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(32), this, "当前账户状态");

    /**
     * The column <code>xbkj.fd_fund_accounts.company</code>. 当前缴存公司名称
     */
    public final TableField<FdFundAccountsRecord, String> COMPANY = createField("company", org.jooq.impl.SQLDataType.VARCHAR(64), this, "当前缴存公司名称");

    /**
     * The column <code>xbkj.fd_fund_accounts.deposit_amount</code>. 月缴存金额
     */
    public final TableField<FdFundAccountsRecord, String> DEPOSIT_AMOUNT = createField("deposit_amount", org.jooq.impl.SQLDataType.VARCHAR(20), this, "月缴存金额");

    /**
     * The column <code>xbkj.fd_fund_accounts.deposit_base</code>. 月缴存基数
     */
    public final TableField<FdFundAccountsRecord, String> DEPOSIT_BASE = createField("deposit_base", org.jooq.impl.SQLDataType.VARCHAR(20), this, "月缴存基数");

    /**
     * The column <code>xbkj.fd_fund_accounts.company_rate</code>. 公司缴存比例
     */
    public final TableField<FdFundAccountsRecord, String> COMPANY_RATE = createField("company_rate", org.jooq.impl.SQLDataType.VARCHAR(11), this, "公司缴存比例");

    /**
     * The column <code>xbkj.fd_fund_accounts.person_rate</code>. 个人缴存比例
     */
    public final TableField<FdFundAccountsRecord, String> PERSON_RATE = createField("person_rate", org.jooq.impl.SQLDataType.VARCHAR(11), this, "个人缴存比例");

    /**
     * The column <code>xbkj.fd_fund_accounts.housing_supplement_base</code>. 房补缴存金额(单位:分)
     */
    public final TableField<FdFundAccountsRecord, String> HOUSING_SUPPLEMENT_BASE = createField("housing_supplement_base", org.jooq.impl.SQLDataType.VARCHAR(20), this, "房补缴存金额(单位:分)");

    /**
     * The column <code>xbkj.fd_fund_accounts.housing_supplement_balance</code>. 房补余额(单位:分
     */
    public final TableField<FdFundAccountsRecord, String> HOUSING_SUPPLEMENT_BALANCE = createField("housing_supplement_balance", org.jooq.impl.SQLDataType.VARCHAR(20), this, "房补余额(单位:分");

    /**
     * The column <code>xbkj.fd_fund_accounts.init_date</code>. 开户日期
     */
    public final TableField<FdFundAccountsRecord, Timestamp> INIT_DATE = createField("init_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "开户日期");

    /**
     * The column <code>xbkj.fd_fund_accounts.once_balance</code>. 一次性补贴余额(单位:分)
     */
    public final TableField<FdFundAccountsRecord, Long> ONCE_BALANCE = createField("once_balance", org.jooq.impl.SQLDataType.BIGINT, this, "一次性补贴余额(单位:分)");

    /**
     * The column <code>xbkj.fd_fund_accounts.create_at</code>. 创建时间
     */
    public final TableField<FdFundAccountsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_fund_accounts.update_at</code>. 更新时间
     */
    public final TableField<FdFundAccountsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_fund_accounts.del_flag</code>. 删除标志
     */
    public final TableField<FdFundAccountsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_fund_accounts.version</code>.
     */
    public final TableField<FdFundAccountsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_fund_accounts</code> table reference
     */
    public FdFundAccounts() {
        this(DSL.name("fd_fund_accounts"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_fund_accounts</code> table reference
     */
    public FdFundAccounts(String alias) {
        this(DSL.name(alias), FD_FUND_ACCOUNTS);
    }

    /**
     * Create an aliased <code>xbkj.fd_fund_accounts</code> table reference
     */
    public FdFundAccounts(Name alias) {
        this(alias, FD_FUND_ACCOUNTS);
    }

    private FdFundAccounts(Name alias, Table<FdFundAccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdFundAccounts(Name alias, Table<FdFundAccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "公积金账户信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_FUND_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdFundAccountsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_FUND_ACCOUNTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdFundAccountsRecord> getPrimaryKey() {
        return Keys.KEY_FD_FUND_ACCOUNTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdFundAccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<FdFundAccountsRecord>>asList(Keys.KEY_FD_FUND_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdFundAccounts as(String alias) {
        return new FdFundAccounts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdFundAccounts as(Name alias) {
        return new FdFundAccounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdFundAccounts rename(String name) {
        return new FdFundAccounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdFundAccounts rename(Name name) {
        return new FdFundAccounts(name, null);
    }
}
