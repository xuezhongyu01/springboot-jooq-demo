/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdBankPositionFundRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 基金持仓(数组)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdBankPositionFund extends TableImpl<FdBankPositionFundRecord> {

    private static final long serialVersionUID = 1623726714;

    /**
     * The reference instance of <code>xbkj.fd_bank_position_fund</code>
     */
    public static final FdBankPositionFund FD_BANK_POSITION_FUND = new FdBankPositionFund();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdBankPositionFundRecord> getRecordType() {
        return FdBankPositionFundRecord.class;
    }

    /**
     * The column <code>xbkj.fd_bank_position_fund.id</code>. 主键
     */
    public final TableField<FdBankPositionFundRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_bank_position_fund.account_id</code>. 账户ID(关联字段)
     */
    public final TableField<FdBankPositionFundRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "账户ID(关联字段)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.code</code>. 产品代码
     */
    public final TableField<FdBankPositionFundRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "产品代码");

    /**
     * The column <code>xbkj.fd_bank_position_fund.name</code>. 产品名称
     */
    public final TableField<FdBankPositionFundRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "产品名称");

    /**
     * The column <code>xbkj.fd_bank_position_fund.currency</code>. 币种(中文，参见币种字典)
     */
    public final TableField<FdBankPositionFundRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR(32), this, "币种(中文，参见币种字典)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.capital</code>. 本金(单位：分)
     */
    public final TableField<FdBankPositionFundRecord, String> CAPITAL = createField("capital", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本金(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.share</code>. 当前份额(单位：分)
     */
    public final TableField<FdBankPositionFundRecord, String> SHARE = createField("share", org.jooq.impl.SQLDataType.VARCHAR(32), this, "当前份额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.usable_share</code>. 可用份额(单位：分)
     */
    public final TableField<FdBankPositionFundRecord, String> USABLE_SHARE = createField("usable_share", org.jooq.impl.SQLDataType.VARCHAR(32), this, "可用份额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.dividend_type</code>. 分红方式(现金分红／红利再投资)
     */
    public final TableField<FdBankPositionFundRecord, String> DIVIDEND_TYPE = createField("dividend_type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "分红方式(现金分红／红利再投资)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.net_value</code>. 当前净值(单位：分)
     */
    public final TableField<FdBankPositionFundRecord, String> NET_VALUE = createField("net_value", org.jooq.impl.SQLDataType.VARCHAR(32), this, "当前净值(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.net_value_date</code>. 净值日期
     */
    public final TableField<FdBankPositionFundRecord, String> NET_VALUE_DATE = createField("net_value_date", org.jooq.impl.SQLDataType.VARCHAR(32), this, "净值日期");

    /**
     * The column <code>xbkj.fd_bank_position_fund.market_value</code>. 当前市值
     */
    public final TableField<FdBankPositionFundRecord, String> MARKET_VALUE = createField("market_value", org.jooq.impl.SQLDataType.VARCHAR(32), this, "当前市值");

    /**
     * The column <code>xbkj.fd_bank_position_fund.floating_pl</code>. 浮动盈亏(单位：分)
     */
    public final TableField<FdBankPositionFundRecord, String> FLOATING_PL = createField("floating_pl", org.jooq.impl.SQLDataType.VARCHAR(32), this, "浮动盈亏(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.yield</code>. 收益率(单位：百分比)
     */
    public final TableField<FdBankPositionFundRecord, String> YIELD = createField("yield", org.jooq.impl.SQLDataType.VARCHAR(32), this, "收益率(单位：百分比)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.income_yesterday</code>. 昨日收益(单位：分)
     */
    public final TableField<FdBankPositionFundRecord, String> INCOME_YESTERDAY = createField("income_yesterday", org.jooq.impl.SQLDataType.VARCHAR(32), this, "昨日收益(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fund.create_at</code>. 创建时间
     */
    public final TableField<FdBankPositionFundRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_bank_position_fund.update_at</code>. 更新时间
     */
    public final TableField<FdBankPositionFundRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_bank_position_fund.del_flag</code>. 删除标志
     */
    public final TableField<FdBankPositionFundRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_bank_position_fund.version</code>.
     */
    public final TableField<FdBankPositionFundRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_bank_position_fund</code> table reference
     */
    public FdBankPositionFund() {
        this(DSL.name("fd_bank_position_fund"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_bank_position_fund</code> table reference
     */
    public FdBankPositionFund(String alias) {
        this(DSL.name(alias), FD_BANK_POSITION_FUND);
    }

    /**
     * Create an aliased <code>xbkj.fd_bank_position_fund</code> table reference
     */
    public FdBankPositionFund(Name alias) {
        this(alias, FD_BANK_POSITION_FUND);
    }

    private FdBankPositionFund(Name alias, Table<FdBankPositionFundRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdBankPositionFund(Name alias, Table<FdBankPositionFundRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "基金持仓(数组)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_BANK_POSITION_FUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdBankPositionFundRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_BANK_POSITION_FUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdBankPositionFundRecord> getPrimaryKey() {
        return Keys.KEY_FD_BANK_POSITION_FUND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdBankPositionFundRecord>> getKeys() {
        return Arrays.<UniqueKey<FdBankPositionFundRecord>>asList(Keys.KEY_FD_BANK_POSITION_FUND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdBankPositionFund as(String alias) {
        return new FdBankPositionFund(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdBankPositionFund as(Name alias) {
        return new FdBankPositionFund(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdBankPositionFund rename(String name) {
        return new FdBankPositionFund(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdBankPositionFund rename(Name name) {
        return new FdBankPositionFund(name, null);
    }
}
