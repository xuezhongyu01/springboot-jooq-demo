/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.FdProviderInfoIsidentify;
import com.jooq.domain.tables.records.FdProviderInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 运营商数据表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderInfo extends TableImpl<FdProviderInfoRecord> {

    private static final long serialVersionUID = -1261053501;

    /**
     * The reference instance of <code>xbkj.fd_provider_info</code>
     */
    public static final FdProviderInfo FD_PROVIDER_INFO = new FdProviderInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdProviderInfoRecord> getRecordType() {
        return FdProviderInfoRecord.class;
    }

    /**
     * The column <code>xbkj.fd_provider_info.id</code>. 主键
     */
    public final TableField<FdProviderInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_provider_info.member_id</code>. 用户id
     */
    public final TableField<FdProviderInfoRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT, this, "用户id");

    /**
     * The column <code>xbkj.fd_provider_info.name</code>. 姓名
     */
    public final TableField<FdProviderInfoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "姓名");

    /**
     * The column <code>xbkj.fd_provider_info.phone</code>. 手机号
     */
    public final TableField<FdProviderInfoRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(32), this, "手机号");

    /**
     * The column <code>xbkj.fd_provider_info.provider</code>. 运营商（指移动/联通/电信）
     */
    public final TableField<FdProviderInfoRecord, String> PROVIDER = createField("provider", org.jooq.impl.SQLDataType.VARCHAR(64), this, "运营商（指移动/联通/电信）");

    /**
     * The column <code>xbkj.fd_provider_info.isidentify</code>. 是否实名认证(中文，枚举 是、否)
     */
    public final TableField<FdProviderInfoRecord, FdProviderInfoIsidentify> ISIDENTIFY = createField("isidentify", org.jooq.impl.SQLDataType.VARCHAR(1).asEnumDataType(com.jooq.domain.enums.FdProviderInfoIsidentify.class), this, "是否实名认证(中文，枚举 是、否)");

    /**
     * The column <code>xbkj.fd_provider_info.register_date</code>. 入网时间("YYYY-MM-DD")
     */
    public final TableField<FdProviderInfoRecord, String> REGISTER_DATE = createField("register_date", org.jooq.impl.SQLDataType.VARCHAR, this, "入网时间(\"YYYY-MM-DD\")");

    /**
     * The column <code>xbkj.fd_provider_info.net_age</code>. 网龄
     */
    public final TableField<FdProviderInfoRecord, String> NET_AGE = createField("net_age", org.jooq.impl.SQLDataType.VARCHAR(16), this, "网龄");

    /**
     * The column <code>xbkj.fd_provider_info.idcard</code>. 证件号码
     */
    public final TableField<FdProviderInfoRecord, String> IDCARD = createField("idcard", org.jooq.impl.SQLDataType.VARCHAR(32), this, "证件号码");

    /**
     * The column <code>xbkj.fd_provider_info.idcard_type</code>. 证件类型
     */
    public final TableField<FdProviderInfoRecord, String> IDCARD_TYPE = createField("idcard_type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "证件类型");

    /**
     * The column <code>xbkj.fd_provider_info.status</code>. 账户状态(中文，例如：“正常”/“停机”)
     */
    public final TableField<FdProviderInfoRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(64), this, "账户状态(中文，例如：“正常”/“停机”)");

    /**
     * The column <code>xbkj.fd_provider_info.balance</code>. 当前余额(单位：分)
     */
    public final TableField<FdProviderInfoRecord, String> BALANCE = createField("balance", org.jooq.impl.SQLDataType.VARCHAR(20), this, "当前余额(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_info.monetary</code>. 当前消费金额(单位：分)
     */
    public final TableField<FdProviderInfoRecord, String> MONETARY = createField("monetary", org.jooq.impl.SQLDataType.VARCHAR(20), this, "当前消费金额(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_info.province</code>. 所在省份
     */
    public final TableField<FdProviderInfoRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(64), this, "所在省份");

    /**
     * The column <code>xbkj.fd_provider_info.city</code>. 所在城市
     */
    public final TableField<FdProviderInfoRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(64), this, "所在城市");

    /**
     * The column <code>xbkj.fd_provider_info.address</code>. 账单地址
     */
    public final TableField<FdProviderInfoRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "账单地址");

    /**
     * The column <code>xbkj.fd_provider_info.location</code>. 归属地
     */
    public final TableField<FdProviderInfoRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR(64), this, "归属地");

    /**
     * The column <code>xbkj.fd_provider_info.user_name</code>. 用户填写姓名
     */
    public final TableField<FdProviderInfoRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户填写姓名");

    /**
     * The column <code>xbkj.fd_provider_info.user_idcard</code>. 用户填写身份证
     */
    public final TableField<FdProviderInfoRecord, String> USER_IDCARD = createField("user_idcard", org.jooq.impl.SQLDataType.VARCHAR(32), this, "用户填写身份证");

    /**
     * The column <code>xbkj.fd_provider_info.user_phone</code>. 用户填写手机号
     */
    public final TableField<FdProviderInfoRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(32), this, "用户填写手机号");

    /**
     * The column <code>xbkj.fd_provider_info.location_match_idcardaddress</code>. 手机归属地是否与身份证户籍地址相同（比对省市；户籍地址:身份证前4位）
     */
    public final TableField<FdProviderInfoRecord, String> LOCATION_MATCH_IDCARDADDRESS = createField("location_match_idcardaddress", org.jooq.impl.SQLDataType.VARCHAR(64), this, "手机归属地是否与身份证户籍地址相同（比对省市；户籍地址:身份证前4位）");

    /**
     * The column <code>xbkj.fd_provider_info.location_match_billaddress</code>. 手机归属地是否与账单地址相同（比对省市）
     */
    public final TableField<FdProviderInfoRecord, String> LOCATION_MATCH_BILLADDRESS = createField("location_match_billaddress", org.jooq.impl.SQLDataType.VARCHAR(64), this, "手机归属地是否与账单地址相同（比对省市）");

    /**
     * The column <code>xbkj.fd_provider_info.idcardaddress_match_billaddress</code>. 身份证户籍地址是否与账单地址相同（比对省市；户籍地址:身份证前4位）
     */
    public final TableField<FdProviderInfoRecord, String> IDCARDADDRESS_MATCH_BILLADDRESS = createField("idcardaddress_match_billaddress", org.jooq.impl.SQLDataType.VARCHAR(64), this, "身份证户籍地址是否与账单地址相同（比对省市；户籍地址:身份证前4位）");

    /**
     * The column <code>xbkj.fd_provider_info.common_city</code>. 最近一个月的天数最大的常用通话地
     */
    public final TableField<FdProviderInfoRecord, String> COMMON_CITY = createField("common_city", org.jooq.impl.SQLDataType.VARCHAR(64), this, "最近一个月的天数最大的常用通话地");

    /**
     * The column <code>xbkj.fd_provider_info.average_consume_amount_permonth</code>. 近半年月均消费金额(分)
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CONSUME_AMOUNT_PERMONTH = createField("average_consume_amount_permonth", org.jooq.impl.SQLDataType.VARCHAR(64), this, "近半年月均消费金额(分)");

    /**
     * The column <code>xbkj.fd_provider_info.exceed_plan_count</code>. 近半年超出套餐次数
     */
    public final TableField<FdProviderInfoRecord, String> EXCEED_PLAN_COUNT = createField("exceed_plan_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "近半年超出套餐次数");

    /**
     * The column <code>xbkj.fd_provider_info.exceed_plan_rate</code>. 近半年超出套餐金额占比
     */
    public final TableField<FdProviderInfoRecord, String> EXCEED_PLAN_RATE = createField("exceed_plan_rate", org.jooq.impl.SQLDataType.VARCHAR(64), this, "近半年超出套餐金额占比");

    /**
     * The column <code>xbkj.fd_provider_info.remission_count</code>. 近半年费用减免次数
     */
    public final TableField<FdProviderInfoRecord, String> REMISSION_COUNT = createField("remission_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "近半年费用减免次数");

    /**
     * The column <code>xbkj.fd_provider_info.remission_rate</code>. 近半年费用减免金额占比
     */
    public final TableField<FdProviderInfoRecord, String> REMISSION_RATE = createField("remission_rate", org.jooq.impl.SQLDataType.VARCHAR(64), this, "近半年费用减免金额占比");

    /**
     * The column <code>xbkj.fd_provider_info.average_call_seconds_permonth</code>. 月均主叫时长
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALL_SECONDS_PERMONTH = createField("average_call_seconds_permonth", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均主叫时长");

    /**
     * The column <code>xbkj.fd_provider_info.average_called_seconds_permonth</code>. 月均被叫时长
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALLED_SECONDS_PERMONTH = createField("average_called_seconds_permonth", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均被叫时长");

    /**
     * The column <code>xbkj.fd_provider_info.special_number_dial_count</code>. 近半年特殊号码联系次数(110/119/120)
     */
    public final TableField<FdProviderInfoRecord, String> SPECIAL_NUMBER_DIAL_COUNT = createField("special_number_dial_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "近半年特殊号码联系次数(110/119/120)");

    /**
     * The column <code>xbkj.fd_provider_info.score</code>. 信用评分
     */
    public final TableField<FdProviderInfoRecord, String> SCORE = createField("score", org.jooq.impl.SQLDataType.VARCHAR(64), this, "信用评分");

    /**
     * The column <code>xbkj.fd_provider_info.average_call_number</code>. 月均对方号码数
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALL_NUMBER = createField("average_call_number", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均对方号码数");

    /**
     * The column <code>xbkj.fd_provider_info.average_interphone_count</code>. 月均互通电话号码数
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_INTERPHONE_COUNT = createField("average_interphone_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均互通电话号码数");

    /**
     * The column <code>xbkj.fd_provider_info.average_interphone_rate</code>. 月均互通电话号码占比
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_INTERPHONE_RATE = createField("average_interphone_rate", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均互通电话号码占比");

    /**
     * The column <code>xbkj.fd_provider_info.average_calling_count</code>. 月均主叫对方号码数
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALLING_COUNT = createField("average_calling_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均主叫对方号码数");

    /**
     * The column <code>xbkj.fd_provider_info.average_calling_rate</code>. 月均主叫对方号码占比
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALLING_RATE = createField("average_calling_rate", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均主叫对方号码占比");

    /**
     * The column <code>xbkj.fd_provider_info.average_called_count</code>. 月均被叫对方号码数
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALLED_COUNT = createField("average_called_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均被叫对方号码数");

    /**
     * The column <code>xbkj.fd_provider_info.average_called_rate</code>. 月均被叫对方号码占比
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_CALLED_RATE = createField("average_called_rate", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均被叫对方号码占比");

    /**
     * The column <code>xbkj.fd_provider_info.average_count</code>. 月均通话次数
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_COUNT = createField("average_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均通话次数");

    /**
     * The column <code>xbkj.fd_provider_info.average_morning_count</code>. 月均凌晨通话次数(00-06)
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_MORNING_COUNT = createField("average_morning_count", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均凌晨通话次数(00-06)");

    /**
     * The column <code>xbkj.fd_provider_info.average_morning_call_rate</code>. 月均凌晨通话次数占比
     */
    public final TableField<FdProviderInfoRecord, String> AVERAGE_MORNING_CALL_RATE = createField("average_morning_call_rate", org.jooq.impl.SQLDataType.VARCHAR(64), this, "月均凌晨通话次数占比");

    /**
     * The column <code>xbkj.fd_provider_info.idno_hit_court_black</code>. 身份证是否法院失信名单
     */
    public final TableField<FdProviderInfoRecord, String> IDNO_HIT_COURT_BLACK = createField("idno_hit_court_black", org.jooq.impl.SQLDataType.VARCHAR(64), this, "身份证是否法院失信名单");

    /**
     * The column <code>xbkj.fd_provider_info.idno_hit_finance_black</code>. 身份证是否金融机构黑名单
     */
    public final TableField<FdProviderInfoRecord, String> IDNO_HIT_FINANCE_BLACK = createField("idno_hit_finance_black", org.jooq.impl.SQLDataType.VARCHAR(64), this, "身份证是否金融机构黑名单");

    /**
     * The column <code>xbkj.fd_provider_info.phone_hit_finance_black</code>. 手机号是否金融机构黑名单
     */
    public final TableField<FdProviderInfoRecord, String> PHONE_HIT_FINANCE_BLACK = createField("phone_hit_finance_black", org.jooq.impl.SQLDataType.VARCHAR(64), this, "手机号是否金融机构黑名单");

    /**
     * The column <code>xbkj.fd_provider_info.create_at</code>. 创建时间
     */
    public final TableField<FdProviderInfoRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_provider_info.update_at</code>. 更新时间
     */
    public final TableField<FdProviderInfoRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_provider_info.del_flag</code>. 删除标志
     */
    public final TableField<FdProviderInfoRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_provider_info.version</code>.
     */
    public final TableField<FdProviderInfoRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_provider_info</code> table reference
     */
    public FdProviderInfo() {
        this(DSL.name("fd_provider_info"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_info</code> table reference
     */
    public FdProviderInfo(String alias) {
        this(DSL.name(alias), FD_PROVIDER_INFO);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_info</code> table reference
     */
    public FdProviderInfo(Name alias) {
        this(alias, FD_PROVIDER_INFO);
    }

    private FdProviderInfo(Name alias, Table<FdProviderInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdProviderInfo(Name alias, Table<FdProviderInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "运营商数据表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_PROVIDER_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdProviderInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_PROVIDER_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdProviderInfoRecord> getPrimaryKey() {
        return Keys.KEY_FD_PROVIDER_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdProviderInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<FdProviderInfoRecord>>asList(Keys.KEY_FD_PROVIDER_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderInfo as(String alias) {
        return new FdProviderInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderInfo as(Name alias) {
        return new FdProviderInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderInfo rename(String name) {
        return new FdProviderInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderInfo rename(Name name) {
        return new FdProviderInfo(name, null);
    }
}
