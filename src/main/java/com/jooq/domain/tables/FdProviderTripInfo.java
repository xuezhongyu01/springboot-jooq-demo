/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdProviderTripInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 出行记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderTripInfo extends TableImpl<FdProviderTripInfoRecord> {

    private static final long serialVersionUID = 759669137;

    /**
     * The reference instance of <code>xbkj.fd_provider_trip_info</code>
     */
    public static final FdProviderTripInfo FD_PROVIDER_TRIP_INFO = new FdProviderTripInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdProviderTripInfoRecord> getRecordType() {
        return FdProviderTripInfoRecord.class;
    }

    /**
     * The column <code>xbkj.fd_provider_trip_info.id</code>. 主键
     */
    public final TableField<FdProviderTripInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_provider_trip_info.account_id</code>. 账户id
     */
    public final TableField<FdProviderTripInfoRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "账户id");

    /**
     * The column <code>xbkj.fd_provider_trip_info.start_date</code>. 出行开始时间(格式: "YYYY-MM-DD")
     */
    public final TableField<FdProviderTripInfoRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "出行开始时间(格式: \"YYYY-MM-DD\")");

    /**
     * The column <code>xbkj.fd_provider_trip_info.end_date</code>. 出行结束时间(格式: "YYYY-MM-DD")
     */
    public final TableField<FdProviderTripInfoRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "出行结束时间(格式: \"YYYY-MM-DD\")");

    /**
     * The column <code>xbkj.fd_provider_trip_info.departure</code>. 出发地
     */
    public final TableField<FdProviderTripInfoRecord, String> DEPARTURE = createField("departure", org.jooq.impl.SQLDataType.VARCHAR(64), this, "出发地");

    /**
     * The column <code>xbkj.fd_provider_trip_info.destination</code>. 目的地
     */
    public final TableField<FdProviderTripInfoRecord, String> DESTINATION = createField("destination", org.jooq.impl.SQLDataType.VARCHAR(64), this, "目的地");

    /**
     * The column <code>xbkj.fd_provider_trip_info.time_type</code>. 出行时间类型(节假日/工作日/双休日)
     */
    public final TableField<FdProviderTripInfoRecord, String> TIME_TYPE = createField("time_type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "出行时间类型(节假日/工作日/双休日)");

    /**
     * The column <code>xbkj.fd_provider_trip_info.create_at</code>. 创建时间
     */
    public final TableField<FdProviderTripInfoRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_provider_trip_info.update_at</code>. 更新时间
     */
    public final TableField<FdProviderTripInfoRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_provider_trip_info.del_flag</code>. 删除标志
     */
    public final TableField<FdProviderTripInfoRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_provider_trip_info.version</code>.
     */
    public final TableField<FdProviderTripInfoRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_provider_trip_info</code> table reference
     */
    public FdProviderTripInfo() {
        this(DSL.name("fd_provider_trip_info"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_trip_info</code> table reference
     */
    public FdProviderTripInfo(String alias) {
        this(DSL.name(alias), FD_PROVIDER_TRIP_INFO);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_trip_info</code> table reference
     */
    public FdProviderTripInfo(Name alias) {
        this(alias, FD_PROVIDER_TRIP_INFO);
    }

    private FdProviderTripInfo(Name alias, Table<FdProviderTripInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdProviderTripInfo(Name alias, Table<FdProviderTripInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "出行记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_PROVIDER_TRIP_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdProviderTripInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_PROVIDER_TRIP_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdProviderTripInfoRecord> getPrimaryKey() {
        return Keys.KEY_FD_PROVIDER_TRIP_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdProviderTripInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<FdProviderTripInfoRecord>>asList(Keys.KEY_FD_PROVIDER_TRIP_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderTripInfo as(String alias) {
        return new FdProviderTripInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderTripInfo as(Name alias) {
        return new FdProviderTripInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderTripInfo rename(String name) {
        return new FdProviderTripInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderTripInfo rename(Name name) {
        return new FdProviderTripInfo(name, null);
    }
}
