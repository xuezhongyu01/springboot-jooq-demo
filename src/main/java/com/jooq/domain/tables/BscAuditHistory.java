/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.BscAuditHistoryAuditType;
import com.jooq.domain.tables.records.BscAuditHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 审核历史表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BscAuditHistory extends TableImpl<BscAuditHistoryRecord> {

    private static final long serialVersionUID = 1049046269;

    /**
     * The reference instance of <code>xbkj.bsc_audit_history</code>
     */
    public static final BscAuditHistory BSC_AUDIT_HISTORY = new BscAuditHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BscAuditHistoryRecord> getRecordType() {
        return BscAuditHistoryRecord.class;
    }

    /**
     * The column <code>xbkj.bsc_audit_history.id</code>.
     */
    public final TableField<BscAuditHistoryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.bsc_audit_history.sysuer_id</code>. 流程发起人
     */
    public final TableField<BscAuditHistoryRecord, Long> SYSUER_ID = createField("sysuer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "流程发起人");

    /**
     * The column <code>xbkj.bsc_audit_history.audit_type</code>. 优惠券，消息模版，发送消息,机构,门店，会员，课程，教师,门店活动,礼品
     */
    public final TableField<BscAuditHistoryRecord, BscAuditHistoryAuditType> AUDIT_TYPE = createField("audit_type", org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false).defaultValue(org.jooq.impl.DSL.inline("coupons", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.BscAuditHistoryAuditType.class), this, "优惠券，消息模版，发送消息,机构,门店，会员，课程，教师,门店活动,礼品");

    /**
     * The column <code>xbkj.bsc_audit_history.audit_result</code>. 审核结果
     */
    public final TableField<BscAuditHistoryRecord, String> AUDIT_RESULT = createField("audit_result", org.jooq.impl.SQLDataType.VARCHAR(50), this, "审核结果");

    /**
     * The column <code>xbkj.bsc_audit_history.audit_at</code>. 流程时间
     */
    public final TableField<BscAuditHistoryRecord, Timestamp> AUDIT_AT = createField("audit_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "流程时间");

    /**
     * The column <code>xbkj.bsc_audit_history.audit_advice</code>. 审核意见
     */
    public final TableField<BscAuditHistoryRecord, String> AUDIT_ADVICE = createField("audit_advice", org.jooq.impl.SQLDataType.VARCHAR(255), this, "审核意见");

    /**
     * The column <code>xbkj.bsc_audit_history.audit_desc</code>. 流程备注
     */
    public final TableField<BscAuditHistoryRecord, String> AUDIT_DESC = createField("audit_desc", org.jooq.impl.SQLDataType.VARCHAR(255), this, "流程备注");

    /**
     * The column <code>xbkj.bsc_audit_history.source_id</code>. 来源id(优惠券模板id，消息模版id，发送消息id，机构id，门店id)
     */
    public final TableField<BscAuditHistoryRecord, Long> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.BIGINT, this, "来源id(优惠券模板id，消息模版id，发送消息id，机构id，门店id)");

    /**
     * The column <code>xbkj.bsc_audit_history.create_at</code>. 创建时间
     */
    public final TableField<BscAuditHistoryRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.bsc_audit_history.update_at</code>. 更新时间
     */
    public final TableField<BscAuditHistoryRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.bsc_audit_history.del_flag</code>. 删除标志
     */
    public final TableField<BscAuditHistoryRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.bsc_audit_history.version</code>.
     */
    public final TableField<BscAuditHistoryRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.bsc_audit_history</code> table reference
     */
    public BscAuditHistory() {
        this(DSL.name("bsc_audit_history"), null);
    }

    /**
     * Create an aliased <code>xbkj.bsc_audit_history</code> table reference
     */
    public BscAuditHistory(String alias) {
        this(DSL.name(alias), BSC_AUDIT_HISTORY);
    }

    /**
     * Create an aliased <code>xbkj.bsc_audit_history</code> table reference
     */
    public BscAuditHistory(Name alias) {
        this(alias, BSC_AUDIT_HISTORY);
    }

    private BscAuditHistory(Name alias, Table<BscAuditHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private BscAuditHistory(Name alias, Table<BscAuditHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "审核历史表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BSC_AUDIT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BscAuditHistoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_BSC_AUDIT_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BscAuditHistoryRecord> getPrimaryKey() {
        return Keys.KEY_BSC_AUDIT_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BscAuditHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<BscAuditHistoryRecord>>asList(Keys.KEY_BSC_AUDIT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BscAuditHistory as(String alias) {
        return new BscAuditHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BscAuditHistory as(Name alias) {
        return new BscAuditHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BscAuditHistory rename(String name) {
        return new BscAuditHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BscAuditHistory rename(Name name) {
        return new BscAuditHistory(name, null);
    }
}
