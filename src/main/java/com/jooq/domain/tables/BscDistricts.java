/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.BscDistrictsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 省市区表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BscDistricts extends TableImpl<BscDistrictsRecord> {

    private static final long serialVersionUID = 1736476986;

    /**
     * The reference instance of <code>xbkj.bsc_districts</code>
     */
    public static final BscDistricts BSC_DISTRICTS = new BscDistricts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BscDistrictsRecord> getRecordType() {
        return BscDistrictsRecord.class;
    }

    /**
     * The column <code>xbkj.bsc_districts.id</code>.
     */
    public final TableField<BscDistrictsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.bsc_districts.parentId</code>.
     */
    public final TableField<BscDistrictsRecord, Long> PARENTID = createField("parentId", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xbkj.bsc_districts.name</code>.
     */
    public final TableField<BscDistrictsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CHAR(20), this, "");

    /**
     * Create a <code>xbkj.bsc_districts</code> table reference
     */
    public BscDistricts() {
        this(DSL.name("bsc_districts"), null);
    }

    /**
     * Create an aliased <code>xbkj.bsc_districts</code> table reference
     */
    public BscDistricts(String alias) {
        this(DSL.name(alias), BSC_DISTRICTS);
    }

    /**
     * Create an aliased <code>xbkj.bsc_districts</code> table reference
     */
    public BscDistricts(Name alias) {
        this(alias, BSC_DISTRICTS);
    }

    private BscDistricts(Name alias, Table<BscDistrictsRecord> aliased) {
        this(alias, aliased, null);
    }

    private BscDistricts(Name alias, Table<BscDistrictsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "省市区表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BSC_DISTRICTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BscDistrictsRecord, Long> getIdentity() {
        return Keys.IDENTITY_BSC_DISTRICTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BscDistrictsRecord> getPrimaryKey() {
        return Keys.KEY_BSC_DISTRICTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BscDistrictsRecord>> getKeys() {
        return Arrays.<UniqueKey<BscDistrictsRecord>>asList(Keys.KEY_BSC_DISTRICTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BscDistricts as(String alias) {
        return new BscDistricts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BscDistricts as(Name alias) {
        return new BscDistricts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BscDistricts rename(String name) {
        return new BscDistricts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BscDistricts rename(Name name) {
        return new BscDistricts(name, null);
    }
}
