/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdBankPositionFixedRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 定期持仓(数组)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdBankPositionFixed extends TableImpl<FdBankPositionFixedRecord> {

    private static final long serialVersionUID = 1741533562;

    /**
     * The reference instance of <code>xbkj.fd_bank_position_fixed</code>
     */
    public static final FdBankPositionFixed FD_BANK_POSITION_FIXED = new FdBankPositionFixed();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdBankPositionFixedRecord> getRecordType() {
        return FdBankPositionFixedRecord.class;
    }

    /**
     * The column <code>xbkj.fd_bank_position_fixed.id</code>. 主键
     */
    public final TableField<FdBankPositionFixedRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.account_id</code>. 账户ID(关联字段)
     */
    public final TableField<FdBankPositionFixedRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "账户ID(关联字段)");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.code</code>. 产品代码
     */
    public final TableField<FdBankPositionFixedRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(64), this, "产品代码");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.name</code>. 产品名称
     */
    public final TableField<FdBankPositionFixedRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "产品名称");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.status</code>. 状态
     */
    public final TableField<FdBankPositionFixedRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(64), this, "状态");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.currency</code>. 币种(中文，参见币种字典)
     */
    public final TableField<FdBankPositionFixedRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR(32), this, "币种(中文，参见币种字典)");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.start_date</code>. 开始日期
     */
    public final TableField<FdBankPositionFixedRecord, String> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.VARCHAR(32), this, "开始日期");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.end_date</code>. 到期日期
     */
    public final TableField<FdBankPositionFixedRecord, String> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.VARCHAR(32), this, "到期日期");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.capital</code>. 本金(单位：分)
     */
    public final TableField<FdBankPositionFixedRecord, String> CAPITAL = createField("capital", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本金(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.interest</code>. 利息
     */
    public final TableField<FdBankPositionFixedRecord, String> INTEREST = createField("interest", org.jooq.impl.SQLDataType.VARCHAR(32), this, "利息");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.amount</code>. 本息总额(单位：分)
     */
    public final TableField<FdBankPositionFixedRecord, String> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本息总额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.interest_rate</code>. 利率(单位：百分比)
     */
    public final TableField<FdBankPositionFixedRecord, String> INTEREST_RATE = createField("interest_rate", org.jooq.impl.SQLDataType.VARCHAR(32), this, "利率(单位：百分比)");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.term</code>. 存期
     */
    public final TableField<FdBankPositionFixedRecord, String> TERM = createField("term", org.jooq.impl.SQLDataType.VARCHAR(32), this, "存期");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.automatic_redepositt</code>. 自动转存
     */
    public final TableField<FdBankPositionFixedRecord, String> AUTOMATIC_REDEPOSITT = createField("automatic_redepositt", org.jooq.impl.SQLDataType.VARCHAR(32), this, "自动转存");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.adjustment_amount</code>. 本期调整金额(单位：分)
     */
    public final TableField<FdBankPositionFixedRecord, String> ADJUSTMENT_AMOUNT = createField("adjustment_amount", org.jooq.impl.SQLDataType.VARCHAR(32), this, "本期调整金额(单位：分)");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.create_at</code>. 创建时间
     */
    public final TableField<FdBankPositionFixedRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.update_at</code>. 更新时间
     */
    public final TableField<FdBankPositionFixedRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.del_flag</code>. 删除标志
     */
    public final TableField<FdBankPositionFixedRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_bank_position_fixed.version</code>.
     */
    public final TableField<FdBankPositionFixedRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_bank_position_fixed</code> table reference
     */
    public FdBankPositionFixed() {
        this(DSL.name("fd_bank_position_fixed"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_bank_position_fixed</code> table reference
     */
    public FdBankPositionFixed(String alias) {
        this(DSL.name(alias), FD_BANK_POSITION_FIXED);
    }

    /**
     * Create an aliased <code>xbkj.fd_bank_position_fixed</code> table reference
     */
    public FdBankPositionFixed(Name alias) {
        this(alias, FD_BANK_POSITION_FIXED);
    }

    private FdBankPositionFixed(Name alias, Table<FdBankPositionFixedRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdBankPositionFixed(Name alias, Table<FdBankPositionFixedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "定期持仓(数组)");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_BANK_POSITION_FIXED_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdBankPositionFixedRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_BANK_POSITION_FIXED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdBankPositionFixedRecord> getPrimaryKey() {
        return Keys.KEY_FD_BANK_POSITION_FIXED_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdBankPositionFixedRecord>> getKeys() {
        return Arrays.<UniqueKey<FdBankPositionFixedRecord>>asList(Keys.KEY_FD_BANK_POSITION_FIXED_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdBankPositionFixed as(String alias) {
        return new FdBankPositionFixed(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdBankPositionFixed as(Name alias) {
        return new FdBankPositionFixed(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdBankPositionFixed rename(String name) {
        return new FdBankPositionFixed(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdBankPositionFixed rename(Name name) {
        return new FdBankPositionFixed(name, null);
    }
}
