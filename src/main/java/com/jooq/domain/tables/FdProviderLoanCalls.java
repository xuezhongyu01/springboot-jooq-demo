/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdProviderLoanCallsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 信贷类通话统计(按主叫与被叫总时长从多到少排序)表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderLoanCalls extends TableImpl<FdProviderLoanCallsRecord> {

    private static final long serialVersionUID = 1731545896;

    /**
     * The reference instance of <code>xbkj.fd_provider_loan_calls</code>
     */
    public static final FdProviderLoanCalls FD_PROVIDER_LOAN_CALLS = new FdProviderLoanCalls();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdProviderLoanCallsRecord> getRecordType() {
        return FdProviderLoanCallsRecord.class;
    }

    /**
     * The column <code>xbkj.fd_provider_loan_calls.id</code>. 主键
     */
    public final TableField<FdProviderLoanCallsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.account_id</code>. 账户id
     */
    public final TableField<FdProviderLoanCallsRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "账户id");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.phone</code>. 对方号码
     */
    public final TableField<FdProviderLoanCallsRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(32), this, "对方号码");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.location</code>. 	对方号码归属地
     */
    public final TableField<FdProviderLoanCallsRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR(32), this, "	对方号码归属地");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.name</code>. 名称
     */
    public final TableField<FdProviderLoanCallsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(32), this, "名称");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.call_count</code>. 主叫次数
     */
    public final TableField<FdProviderLoanCallsRecord, String> CALL_COUNT = createField("call_count", org.jooq.impl.SQLDataType.VARCHAR(32), this, "主叫次数");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.call_time</code>. 主叫总时长
     */
    public final TableField<FdProviderLoanCallsRecord, String> CALL_TIME = createField("call_time", org.jooq.impl.SQLDataType.VARCHAR(32), this, "主叫总时长");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.called_count</code>. 被叫次数
     */
    public final TableField<FdProviderLoanCallsRecord, String> CALLED_COUNT = createField("called_count", org.jooq.impl.SQLDataType.VARCHAR(32), this, "被叫次数");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.called_time</code>. 被叫总时长
     */
    public final TableField<FdProviderLoanCallsRecord, String> CALLED_TIME = createField("called_time", org.jooq.impl.SQLDataType.VARCHAR(32), this, "被叫总时长");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.first_time</code>. 第一次通话时间
     */
    public final TableField<FdProviderLoanCallsRecord, String> FIRST_TIME = createField("first_time", org.jooq.impl.SQLDataType.VARCHAR(32), this, "第一次通话时间");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.last_time</code>. 最近一次通话时间
     */
    public final TableField<FdProviderLoanCallsRecord, String> LAST_TIME = createField("last_time", org.jooq.impl.SQLDataType.VARCHAR(32), this, "最近一次通话时间");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.create_at</code>. 创建时间
     */
    public final TableField<FdProviderLoanCallsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.update_at</code>. 更新时间
     */
    public final TableField<FdProviderLoanCallsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.del_flag</code>. 删除标志
     */
    public final TableField<FdProviderLoanCallsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_provider_loan_calls.version</code>.
     */
    public final TableField<FdProviderLoanCallsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_provider_loan_calls</code> table reference
     */
    public FdProviderLoanCalls() {
        this(DSL.name("fd_provider_loan_calls"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_loan_calls</code> table reference
     */
    public FdProviderLoanCalls(String alias) {
        this(DSL.name(alias), FD_PROVIDER_LOAN_CALLS);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_loan_calls</code> table reference
     */
    public FdProviderLoanCalls(Name alias) {
        this(alias, FD_PROVIDER_LOAN_CALLS);
    }

    private FdProviderLoanCalls(Name alias, Table<FdProviderLoanCallsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdProviderLoanCalls(Name alias, Table<FdProviderLoanCallsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "信贷类通话统计(按主叫与被叫总时长从多到少排序)表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_PROVIDER_LOAN_CALLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdProviderLoanCallsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_PROVIDER_LOAN_CALLS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdProviderLoanCallsRecord> getPrimaryKey() {
        return Keys.KEY_FD_PROVIDER_LOAN_CALLS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdProviderLoanCallsRecord>> getKeys() {
        return Arrays.<UniqueKey<FdProviderLoanCallsRecord>>asList(Keys.KEY_FD_PROVIDER_LOAN_CALLS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderLoanCalls as(String alias) {
        return new FdProviderLoanCalls(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderLoanCalls as(Name alias) {
        return new FdProviderLoanCalls(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderLoanCalls rename(String name) {
        return new FdProviderLoanCalls(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderLoanCalls rename(Name name) {
        return new FdProviderLoanCalls(name, null);
    }
}
