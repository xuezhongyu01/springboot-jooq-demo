/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcBankCardCardType;
import com.jooq.domain.enums.UcBankCardStatus;
import com.jooq.domain.enums.UcBankCardType;
import com.jooq.domain.tables.records.UcBankCardRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 银行卡表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcBankCard extends TableImpl<UcBankCardRecord> {

    private static final long serialVersionUID = 619635166;

    /**
     * The reference instance of <code>xbkj.uc_bank_card</code>
     */
    public static final UcBankCard UC_BANK_CARD = new UcBankCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcBankCardRecord> getRecordType() {
        return UcBankCardRecord.class;
    }

    /**
     * The column <code>xbkj.uc_bank_card.id</code>.
     */
    public final TableField<UcBankCardRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_bank_card.uc_id</code>. 会员或机构或单店id
     */
    public final TableField<UcBankCardRecord, Long> UC_ID = createField("uc_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "会员或机构或单店id");

    /**
     * The column <code>xbkj.uc_bank_card.type</code>. 会员，机构，单店,资产方uc_id=0
     */
    public final TableField<UcBankCardRecord, UcBankCardType> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false).defaultValue(org.jooq.impl.DSL.inline("user", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.UcBankCardType.class), this, "会员，机构，单店,资产方uc_id=0");

    /**
     * The column <code>xbkj.uc_bank_card.bank_name</code>. 银行名称
     */
    public final TableField<UcBankCardRecord, String> BANK_NAME = createField("bank_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "银行名称");

    /**
     * The column <code>xbkj.uc_bank_card.card_type</code>. 对公，对私
     */
    public final TableField<UcBankCardRecord, UcBankCardCardType> CARD_TYPE = createField("card_type", org.jooq.impl.SQLDataType.VARCHAR(11).nullable(false).asEnumDataType(com.jooq.domain.enums.UcBankCardCardType.class), this, "对公，对私");

    /**
     * The column <code>xbkj.uc_bank_card.card_number</code>. 银行卡号
     */
    public final TableField<UcBankCardRecord, String> CARD_NUMBER = createField("card_number", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "银行卡号");

    /**
     * The column <code>xbkj.uc_bank_card.card_holder</code>. 持卡人（易宝 开户名）
     */
    public final TableField<UcBankCardRecord, String> CARD_HOLDER = createField("card_holder", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "持卡人（易宝 开户名）");

    /**
     * The column <code>xbkj.uc_bank_card.bank_mobile</code>. 银行预留手机号
     */
    public final TableField<UcBankCardRecord, Long> BANK_MOBILE = createField("bank_mobile", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "银行预留手机号");

    /**
     * The column <code>xbkj.uc_bank_card.bank_code</code>. 银行代码(ICBC、CBC等)
     */
    public final TableField<UcBankCardRecord, String> BANK_CODE = createField("bank_code", org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "银行代码(ICBC、CBC等)");

    /**
     * The column <code>xbkj.uc_bank_card.bank_province</code>. 银行所属省份
     */
    public final TableField<UcBankCardRecord, String> BANK_PROVINCE = createField("bank_province", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行所属省份");

    /**
     * The column <code>xbkj.uc_bank_card.bank_city</code>. 银行所属城市
     */
    public final TableField<UcBankCardRecord, String> BANK_CITY = createField("bank_city", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行所属城市");

    /**
     * The column <code>xbkj.uc_bank_card.bank_district</code>. 银行所属所在区
     */
    public final TableField<UcBankCardRecord, String> BANK_DISTRICT = createField("bank_district", org.jooq.impl.SQLDataType.VARCHAR(255), this, "银行所属所在区");

    /**
     * The column <code>xbkj.uc_bank_card.branch_name</code>. 开卡行所属开户行名称（易宝开户行）
     */
    public final TableField<UcBankCardRecord, String> BRANCH_NAME = createField("branch_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "开卡行所属开户行名称（易宝开户行）");

    /**
     * The column <code>xbkj.uc_bank_card.card_bank_cnaps</code>. 联行号
     */
    public final TableField<UcBankCardRecord, String> CARD_BANK_CNAPS = createField("card_bank_cnaps", org.jooq.impl.SQLDataType.CHAR(12), this, "联行号");

    /**
     * The column <code>xbkj.uc_bank_card.default_is</code>. 是否为默认银行卡(0.否 1.是)
     */
    public final TableField<UcBankCardRecord, Boolean> DEFAULT_IS = createField("default_is", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "是否为默认银行卡(0.否 1.是)");

    /**
     * The column <code>xbkj.uc_bank_card.status</code>. 状态:处理中、成功、失败
     */
    public final TableField<UcBankCardRecord, UcBankCardStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(10).asEnumDataType(com.jooq.domain.enums.UcBankCardStatus.class), this, "状态:处理中、成功、失败");

    /**
     * The column <code>xbkj.uc_bank_card.requestno</code>. 绑卡请求号
     */
    public final TableField<UcBankCardRecord, String> REQUESTNO = createField("requestno", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "绑卡请求号");

    /**
     * The column <code>xbkj.uc_bank_card.remarks</code>. 备注
     */
    public final TableField<UcBankCardRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>xbkj.uc_bank_card.create_at</code>. 创建时间
     */
    public final TableField<UcBankCardRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_bank_card.update_at</code>. 更新时间
     */
    public final TableField<UcBankCardRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_bank_card.del_flag</code>. 删除标志
     */
    public final TableField<UcBankCardRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_bank_card.version</code>.
     */
    public final TableField<UcBankCardRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>xbkj.uc_bank_card.province_code</code>. 省份code
     */
    public final TableField<UcBankCardRecord, String> PROVINCE_CODE = createField("province_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "省份code");

    /**
     * The column <code>xbkj.uc_bank_card.city_code</code>. 市区code
     */
    public final TableField<UcBankCardRecord, String> CITY_CODE = createField("city_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "市区code");

    /**
     * Create a <code>xbkj.uc_bank_card</code> table reference
     */
    public UcBankCard() {
        this(DSL.name("uc_bank_card"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_bank_card</code> table reference
     */
    public UcBankCard(String alias) {
        this(DSL.name(alias), UC_BANK_CARD);
    }

    /**
     * Create an aliased <code>xbkj.uc_bank_card</code> table reference
     */
    public UcBankCard(Name alias) {
        this(alias, UC_BANK_CARD);
    }

    private UcBankCard(Name alias, Table<UcBankCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcBankCard(Name alias, Table<UcBankCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "银行卡表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_BANK_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcBankCardRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_BANK_CARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcBankCardRecord> getPrimaryKey() {
        return Keys.KEY_UC_BANK_CARD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcBankCardRecord>> getKeys() {
        return Arrays.<UniqueKey<UcBankCardRecord>>asList(Keys.KEY_UC_BANK_CARD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcBankCard as(String alias) {
        return new UcBankCard(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcBankCard as(Name alias) {
        return new UcBankCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcBankCard rename(String name) {
        return new UcBankCard(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcBankCard rename(Name name) {
        return new UcBankCard(name, null);
    }
}
