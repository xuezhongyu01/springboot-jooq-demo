/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcShopCourseStatus;
import com.jooq.domain.tables.records.UcShopCourseRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 课程列表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcShopCourse extends TableImpl<UcShopCourseRecord> {

    private static final long serialVersionUID = 1624177193;

    /**
     * The reference instance of <code>xbkj.uc_shop_course</code>
     */
    public static final UcShopCourse UC_SHOP_COURSE = new UcShopCourse();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcShopCourseRecord> getRecordType() {
        return UcShopCourseRecord.class;
    }

    /**
     * The column <code>xbkj.uc_shop_course.id</code>.
     */
    public final TableField<UcShopCourseRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_shop_course.shop_id</code>. 门店id
     */
    public final TableField<UcShopCourseRecord, Long> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "门店id");

    /**
     * The column <code>xbkj.uc_shop_course.teacher_id</code>. 教师id数组 以逗号分割
     */
    public final TableField<UcShopCourseRecord, String> TEACHER_ID = createField("teacher_id", org.jooq.impl.SQLDataType.VARCHAR(255), this, "教师id数组 以逗号分割");

    /**
     * The column <code>xbkj.uc_shop_course.name</code>. 课程名
     */
    public final TableField<UcShopCourseRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(120), this, "课程名");

    /**
     * The column <code>xbkj.uc_shop_course.subtitle</code>. 课程副标题
     */
    public final TableField<UcShopCourseRecord, String> SUBTITLE = createField("subtitle", org.jooq.impl.SQLDataType.VARCHAR(200), this, "课程副标题");

    /**
     * The column <code>xbkj.uc_shop_course.class_hour</code>. 课时数
     */
    public final TableField<UcShopCourseRecord, Integer> CLASS_HOUR = createField("class_hour", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "课时数");

    /**
     * The column <code>xbkj.uc_shop_course.class_long</code>. 时长（单位分钟）
     */
    public final TableField<UcShopCourseRecord, Integer> CLASS_LONG = createField("class_long", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "时长（单位分钟）");

    /**
     * The column <code>xbkj.uc_shop_course.class_time</code>. 时段
     */
    public final TableField<UcShopCourseRecord, String> CLASS_TIME = createField("class_time", org.jooq.impl.SQLDataType.VARCHAR(60), this, "时段");

    /**
     * The column <code>xbkj.uc_shop_course.class_banner</code>. bannner,逗号分割
     */
    public final TableField<UcShopCourseRecord, String> CLASS_BANNER = createField("class_banner", org.jooq.impl.SQLDataType.CLOB, this, "bannner,逗号分割");

    /**
     * The column <code>xbkj.uc_shop_course.class_href</code>. bannner链接,逗号分割
     */
    public final TableField<UcShopCourseRecord, String> CLASS_HREF = createField("class_href", org.jooq.impl.SQLDataType.CLOB, this, "bannner链接,逗号分割");

    /**
     * The column <code>xbkj.uc_shop_course.age_start</code>. 适合年龄段开始
     */
    public final TableField<UcShopCourseRecord, Integer> AGE_START = createField("age_start", org.jooq.impl.SQLDataType.INTEGER, this, "适合年龄段开始");

    /**
     * The column <code>xbkj.uc_shop_course.age_end</code>. 适合年龄段结束
     */
    public final TableField<UcShopCourseRecord, Integer> AGE_END = createField("age_end", org.jooq.impl.SQLDataType.INTEGER, this, "适合年龄段结束");

    /**
     * The column <code>xbkj.uc_shop_course.price</code>. 价格
     */
    public final TableField<UcShopCourseRecord, BigDecimal> PRICE = createField("price", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "价格");

    /**
     * The column <code>xbkj.uc_shop_course.logo_url</code>. logo地址
     */
    public final TableField<UcShopCourseRecord, String> LOGO_URL = createField("logo_url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "logo地址");

    /**
     * The column <code>xbkj.uc_shop_course.number</code>. 名额
     */
    public final TableField<UcShopCourseRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.VARCHAR(255), this, "名额");

    /**
     * The column <code>xbkj.uc_shop_course.registration_population</code>. 试听报名数
     */
    public final TableField<UcShopCourseRecord, Long> REGISTRATION_POPULATION = createField("registration_population", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "试听报名数");

    /**
     * The column <code>xbkj.uc_shop_course.is_open_registration</code>. 是否开通试听课
     */
    public final TableField<UcShopCourseRecord, Boolean> IS_OPEN_REGISTRATION = createField("is_open_registration", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否开通试听课");

    /**
     * The column <code>xbkj.uc_shop_course.dea_count</code>. 交易量
     */
    public final TableField<UcShopCourseRecord, BigDecimal> DEA_COUNT = createField("dea_count", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "交易量");

    /**
     * The column <code>xbkj.uc_shop_course.enroll_count</code>. 正式报名数
     */
    public final TableField<UcShopCourseRecord, Long> ENROLL_COUNT = createField("enroll_count", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "正式报名数");

    /**
     * The column <code>xbkj.uc_shop_course.status</code>. 状态：保存，审核中，正常，禁用，其他，审核失败，提交中
     */
    public final TableField<UcShopCourseRecord, UcShopCourseStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).asEnumDataType(com.jooq.domain.enums.UcShopCourseStatus.class), this, "状态：保存，审核中，正常，禁用，其他，审核失败，提交中");

    /**
     * The column <code>xbkj.uc_shop_course.class_intro</code>. 课程介绍
     */
    public final TableField<UcShopCourseRecord, String> CLASS_INTRO = createField("class_intro", org.jooq.impl.SQLDataType.CLOB, this, "课程介绍");

    /**
     * The column <code>xbkj.uc_shop_course.class_highlight</code>. 课程亮点
     */
    public final TableField<UcShopCourseRecord, String> CLASS_HIGHLIGHT = createField("class_highlight", org.jooq.impl.SQLDataType.CLOB, this, "课程亮点");

    /**
     * The column <code>xbkj.uc_shop_course.create_at</code>. 创建时间
     */
    public final TableField<UcShopCourseRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_shop_course.update_at</code>. 更新时间
     */
    public final TableField<UcShopCourseRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_shop_course.del_flag</code>. 删除标志
     */
    public final TableField<UcShopCourseRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_shop_course.version</code>.
     */
    public final TableField<UcShopCourseRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_shop_course</code> table reference
     */
    public UcShopCourse() {
        this(DSL.name("uc_shop_course"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_shop_course</code> table reference
     */
    public UcShopCourse(String alias) {
        this(DSL.name(alias), UC_SHOP_COURSE);
    }

    /**
     * Create an aliased <code>xbkj.uc_shop_course</code> table reference
     */
    public UcShopCourse(Name alias) {
        this(alias, UC_SHOP_COURSE);
    }

    private UcShopCourse(Name alias, Table<UcShopCourseRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcShopCourse(Name alias, Table<UcShopCourseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "课程列表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_SHOP_COURSE_INDEX_SHOP_ID, Indexes.UC_SHOP_COURSE_PRIMARY, Indexes.UC_SHOP_COURSE_UC_SHOP_COURSE_STATUS_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcShopCourseRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_SHOP_COURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcShopCourseRecord> getPrimaryKey() {
        return Keys.KEY_UC_SHOP_COURSE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcShopCourseRecord>> getKeys() {
        return Arrays.<UniqueKey<UcShopCourseRecord>>asList(Keys.KEY_UC_SHOP_COURSE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcShopCourse as(String alias) {
        return new UcShopCourse(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcShopCourse as(Name alias) {
        return new UcShopCourse(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcShopCourse rename(String name) {
        return new UcShopCourse(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcShopCourse rename(Name name) {
        return new UcShopCourse(name, null);
    }
}
