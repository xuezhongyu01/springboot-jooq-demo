/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdSocialsecurityFlowsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 缴存流水表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdSocialsecurityFlows extends TableImpl<FdSocialsecurityFlowsRecord> {

    private static final long serialVersionUID = -1913970342;

    /**
     * The reference instance of <code>xbkj.fd_socialsecurity_flows</code>
     */
    public static final FdSocialsecurityFlows FD_SOCIALSECURITY_FLOWS = new FdSocialsecurityFlows();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdSocialsecurityFlowsRecord> getRecordType() {
        return FdSocialsecurityFlowsRecord.class;
    }

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.id</code>. 主键
     */
    public final TableField<FdSocialsecurityFlowsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.account_id</code>.  账户 ID(关联字段)
     */
    public final TableField<FdSocialsecurityFlowsRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, " 账户 ID(关联字段)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.standard_name</code>. 险种标准名称(医疗/失业/养老/工伤/生育/其他)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> STANDARD_NAME = createField("standard_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "险种标准名称(医疗/失业/养老/工伤/生育/其他)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.origin_name</code>. 险种名称
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> ORIGIN_NAME = createField("origin_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "险种名称");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.start_payment_month</code>. 开始缴费年月("YYYY-MM-DD")
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> START_PAYMENT_MONTH = createField("start_payment_month", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "开始缴费年月(\"YYYY-MM-DD\")");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.end_payment_month</code>. 终止缴费年月("YYYY-MM-DD")
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> END_PAYMENT_MONTH = createField("end_payment_month", org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "终止缴费年月(\"YYYY-MM-DD\")");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.payment_type</code>. 缴费类别
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> PAYMENT_TYPE = createField("payment_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "缴费类别");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.payment_base</code>. 缴费基数(单位：分)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> PAYMENT_BASE = createField("payment_base", org.jooq.impl.SQLDataType.VARCHAR(64), this, "缴费基数(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.person_amount</code>. 个人缴费金额(单位：分)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> PERSON_AMOUNT = createField("person_amount", org.jooq.impl.SQLDataType.VARCHAR(64), this, "个人缴费金额(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.company_amount</code>. 单位缴费金额(单位：分)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> COMPANY_AMOUNT = createField("company_amount", org.jooq.impl.SQLDataType.VARCHAR(64), this, "单位缴费金额(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.company</code>. 缴费单位名称
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> COMPANY = createField("company", org.jooq.impl.SQLDataType.VARCHAR(64), this, "缴费单位名称");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.account_flag</code>. 到账标志(到账/未到账)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> ACCOUNT_FLAG = createField("account_flag", org.jooq.impl.SQLDataType.VARCHAR(64), this, "到账标志(到账/未到账)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.account_month</code>. 到账时间(格式：”YYYY-MM”)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> ACCOUNT_MONTH = createField("account_month", org.jooq.impl.SQLDataType.VARCHAR(64), this, "到账时间(格式：”YYYY-MM”)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.period</code>. 所属期(格式：”YYYY-MM”)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> PERIOD = createField("period", org.jooq.impl.SQLDataType.VARCHAR(64), this, "所属期(格式：”YYYY-MM”)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.amonut</code>. 应缴总额(单位：分)
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> AMONUT = createField("amonut", org.jooq.impl.SQLDataType.VARCHAR(64), this, "应缴总额(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.create_at</code>. 创建时间
     */
    public final TableField<FdSocialsecurityFlowsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.update_at</code>. 更新时间
     */
    public final TableField<FdSocialsecurityFlowsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.del_flag</code>. 删除标志
     */
    public final TableField<FdSocialsecurityFlowsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.version</code>.
     */
    public final TableField<FdSocialsecurityFlowsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>xbkj.fd_socialsecurity_flows.operate_moth</code>. 操作时间
     */
    public final TableField<FdSocialsecurityFlowsRecord, String> OPERATE_MOTH = createField("operate_moth", org.jooq.impl.SQLDataType.VARCHAR(64), this, "操作时间");

    /**
     * Create a <code>xbkj.fd_socialsecurity_flows</code> table reference
     */
    public FdSocialsecurityFlows() {
        this(DSL.name("fd_socialsecurity_flows"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_socialsecurity_flows</code> table reference
     */
    public FdSocialsecurityFlows(String alias) {
        this(DSL.name(alias), FD_SOCIALSECURITY_FLOWS);
    }

    /**
     * Create an aliased <code>xbkj.fd_socialsecurity_flows</code> table reference
     */
    public FdSocialsecurityFlows(Name alias) {
        this(alias, FD_SOCIALSECURITY_FLOWS);
    }

    private FdSocialsecurityFlows(Name alias, Table<FdSocialsecurityFlowsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdSocialsecurityFlows(Name alias, Table<FdSocialsecurityFlowsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "缴存流水表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_SOCIALSECURITY_FLOWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdSocialsecurityFlowsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_SOCIALSECURITY_FLOWS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdSocialsecurityFlowsRecord> getPrimaryKey() {
        return Keys.KEY_FD_SOCIALSECURITY_FLOWS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdSocialsecurityFlowsRecord>> getKeys() {
        return Arrays.<UniqueKey<FdSocialsecurityFlowsRecord>>asList(Keys.KEY_FD_SOCIALSECURITY_FLOWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdSocialsecurityFlows as(String alias) {
        return new FdSocialsecurityFlows(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdSocialsecurityFlows as(Name alias) {
        return new FdSocialsecurityFlows(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdSocialsecurityFlows rename(String name) {
        return new FdSocialsecurityFlows(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdSocialsecurityFlows rename(Name name) {
        return new FdSocialsecurityFlows(name, null);
    }
}
