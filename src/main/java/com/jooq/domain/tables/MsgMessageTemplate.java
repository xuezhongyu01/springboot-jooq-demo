/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.MsgMessageTemplateMsgType;
import com.jooq.domain.enums.MsgMessageTemplateStatus;
import com.jooq.domain.tables.records.MsgMessageTemplateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 消息模板
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MsgMessageTemplate extends TableImpl<MsgMessageTemplateRecord> {

    private static final long serialVersionUID = -539769482;

    /**
     * The reference instance of <code>xbkj.msg_message_template</code>
     */
    public static final MsgMessageTemplate MSG_MESSAGE_TEMPLATE = new MsgMessageTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MsgMessageTemplateRecord> getRecordType() {
        return MsgMessageTemplateRecord.class;
    }

    /**
     * The column <code>xbkj.msg_message_template.id</code>.
     */
    public final TableField<MsgMessageTemplateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.msg_message_template.template_name</code>. 模板名称
     */
    public final TableField<MsgMessageTemplateRecord, String> TEMPLATE_NAME = createField("template_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "模板名称");

    /**
     * The column <code>xbkj.msg_message_template.template_code</code>. 模版编码
     */
    public final TableField<MsgMessageTemplateRecord, String> TEMPLATE_CODE = createField("template_code", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "模版编码");

    /**
     * The column <code>xbkj.msg_message_template.msg_type</code>. 类型：1-短信，2站内信
     */
    public final TableField<MsgMessageTemplateRecord, MsgMessageTemplateMsgType> MSG_TYPE = createField("msg_type", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false).asEnumDataType(com.jooq.domain.enums.MsgMessageTemplateMsgType.class), this, "类型：1-短信，2站内信");

    /**
     * The column <code>xbkj.msg_message_template.subject</code>. 标题，简介
     */
    public final TableField<MsgMessageTemplateRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR(100), this, "标题，简介");

    /**
     * The column <code>xbkj.msg_message_template.content</code>. 模板内容
     */
    public final TableField<MsgMessageTemplateRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "模板内容");

    /**
     * The column <code>xbkj.msg_message_template.status</code>. 状态:等待审核、审核通过、审核未通过
     */
    public final TableField<MsgMessageTemplateRecord, MsgMessageTemplateStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false).asEnumDataType(com.jooq.domain.enums.MsgMessageTemplateStatus.class), this, "状态:等待审核、审核通过、审核未通过");

    /**
     * The column <code>xbkj.msg_message_template.remark</code>. 备注
     */
    public final TableField<MsgMessageTemplateRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>xbkj.msg_message_template.marketing</code>. 是否是营销短信:0.否 1.是
     */
    public final TableField<MsgMessageTemplateRecord, Boolean> MARKETING = createField("marketing", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否是营销短信:0.否 1.是");

    /**
     * The column <code>xbkj.msg_message_template.create_at</code>. 创建时间
     */
    public final TableField<MsgMessageTemplateRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.msg_message_template.update_at</code>. 更新时间
     */
    public final TableField<MsgMessageTemplateRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.msg_message_template.del_flag</code>. 删除标志
     */
    public final TableField<MsgMessageTemplateRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.msg_message_template.version</code>.
     */
    public final TableField<MsgMessageTemplateRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.msg_message_template</code> table reference
     */
    public MsgMessageTemplate() {
        this(DSL.name("msg_message_template"), null);
    }

    /**
     * Create an aliased <code>xbkj.msg_message_template</code> table reference
     */
    public MsgMessageTemplate(String alias) {
        this(DSL.name(alias), MSG_MESSAGE_TEMPLATE);
    }

    /**
     * Create an aliased <code>xbkj.msg_message_template</code> table reference
     */
    public MsgMessageTemplate(Name alias) {
        this(alias, MSG_MESSAGE_TEMPLATE);
    }

    private MsgMessageTemplate(Name alias, Table<MsgMessageTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private MsgMessageTemplate(Name alias, Table<MsgMessageTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "消息模板");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MSG_MESSAGE_TEMPLATE_CODE_MSGTYPE_INDEX, Indexes.MSG_MESSAGE_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MsgMessageTemplateRecord, Long> getIdentity() {
        return Keys.IDENTITY_MSG_MESSAGE_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MsgMessageTemplateRecord> getPrimaryKey() {
        return Keys.KEY_MSG_MESSAGE_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MsgMessageTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<MsgMessageTemplateRecord>>asList(Keys.KEY_MSG_MESSAGE_TEMPLATE_PRIMARY, Keys.KEY_MSG_MESSAGE_TEMPLATE_CODE_MSGTYPE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MsgMessageTemplate as(String alias) {
        return new MsgMessageTemplate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MsgMessageTemplate as(Name alias) {
        return new MsgMessageTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MsgMessageTemplate rename(String name) {
        return new MsgMessageTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MsgMessageTemplate rename(Name name) {
        return new MsgMessageTemplate(name, null);
    }
}
