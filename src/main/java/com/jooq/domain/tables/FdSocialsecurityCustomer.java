/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdSocialsecurityCustomerRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 消费明细表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdSocialsecurityCustomer extends TableImpl<FdSocialsecurityCustomerRecord> {

    private static final long serialVersionUID = 1301750495;

    /**
     * The reference instance of <code>xbkj.fd_socialsecurity_customer</code>
     */
    public static final FdSocialsecurityCustomer FD_SOCIALSECURITY_CUSTOMER = new FdSocialsecurityCustomer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdSocialsecurityCustomerRecord> getRecordType() {
        return FdSocialsecurityCustomerRecord.class;
    }

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.id</code>. 主键
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.account_id</code>.  账户 ID(关联字段)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, " 账户 ID(关联字段)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.trade_time</code>. 时间(格式：”YYYY-MM-DD“)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Timestamp> TRADE_TIME = createField("trade_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "时间(格式：”YYYY-MM-DD“)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.trade_type</code>. 门诊／住院／药店
     */
    public final TableField<FdSocialsecurityCustomerRecord, String> TRADE_TYPE = createField("trade_type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "门诊／住院／药店");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.trade_place</code>. 医院名称
     */
    public final TableField<FdSocialsecurityCustomerRecord, String> TRADE_PLACE = createField("trade_place", org.jooq.impl.SQLDataType.VARCHAR(32), this, "医院名称");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.trade_amount</code>. 总费用(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> TRADE_AMOUNT = createField("trade_amount", org.jooq.impl.SQLDataType.BIGINT, this, "总费用(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.person_out</code>. 个人帐户支出((单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> PERSON_OUT = createField("person_out", org.jooq.impl.SQLDataType.BIGINT, this, "个人帐户支出((单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.pool_out</code>. 统筹帐户支出(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> POOL_OUT = createField("pool_out", org.jooq.impl.SQLDataType.BIGINT, this, "统筹帐户支出(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.medicare_out</code>. 医保支付(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> MEDICARE_OUT = createField("medicare_out", org.jooq.impl.SQLDataType.BIGINT, this, "医保支付(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.own_expense</code>. 自费(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> OWN_EXPENSE = createField("own_expense", org.jooq.impl.SQLDataType.BIGINT, this, "自费(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.pay_cash</code>. 现金支付(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> PAY_CASH = createField("pay_cash", org.jooq.impl.SQLDataType.BIGINT, this, "现金支付(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.pay_big</code>. 大额支付(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> PAY_BIG = createField("pay_big", org.jooq.impl.SQLDataType.BIGINT, this, "大额支付(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.laims_amount</code>. 报销金额(单位：分)
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> LAIMS_AMOUNT = createField("laims_amount", org.jooq.impl.SQLDataType.BIGINT, this, "报销金额(单位：分)");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.create_at</code>. 创建时间
     */
    public final TableField<FdSocialsecurityCustomerRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.update_at</code>. 更新时间
     */
    public final TableField<FdSocialsecurityCustomerRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.del_flag</code>. 删除标志
     */
    public final TableField<FdSocialsecurityCustomerRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.version</code>.
     */
    public final TableField<FdSocialsecurityCustomerRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.organization_id</code>. 机构ID
     */
    public final TableField<FdSocialsecurityCustomerRecord, String> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "机构ID");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.organization_type</code>. 机构类型
     */
    public final TableField<FdSocialsecurityCustomerRecord, String> ORGANIZATION_TYPE = createField("organization_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "机构类型");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.consumption</code>.
     */
    public final TableField<FdSocialsecurityCustomerRecord, String> CONSUMPTION = createField("consumption", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>xbkj.fd_socialsecurity_customer.login_name</code>. 身份证
     */
    public final TableField<FdSocialsecurityCustomerRecord, String> LOGIN_NAME = createField("login_name", org.jooq.impl.SQLDataType.VARCHAR(64), this, "身份证");

    /**
     * Create a <code>xbkj.fd_socialsecurity_customer</code> table reference
     */
    public FdSocialsecurityCustomer() {
        this(DSL.name("fd_socialsecurity_customer"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_socialsecurity_customer</code> table reference
     */
    public FdSocialsecurityCustomer(String alias) {
        this(DSL.name(alias), FD_SOCIALSECURITY_CUSTOMER);
    }

    /**
     * Create an aliased <code>xbkj.fd_socialsecurity_customer</code> table reference
     */
    public FdSocialsecurityCustomer(Name alias) {
        this(alias, FD_SOCIALSECURITY_CUSTOMER);
    }

    private FdSocialsecurityCustomer(Name alias, Table<FdSocialsecurityCustomerRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdSocialsecurityCustomer(Name alias, Table<FdSocialsecurityCustomerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "消费明细表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_SOCIALSECURITY_CUSTOMER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdSocialsecurityCustomerRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_SOCIALSECURITY_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdSocialsecurityCustomerRecord> getPrimaryKey() {
        return Keys.KEY_FD_SOCIALSECURITY_CUSTOMER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdSocialsecurityCustomerRecord>> getKeys() {
        return Arrays.<UniqueKey<FdSocialsecurityCustomerRecord>>asList(Keys.KEY_FD_SOCIALSECURITY_CUSTOMER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdSocialsecurityCustomer as(String alias) {
        return new FdSocialsecurityCustomer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdSocialsecurityCustomer as(Name alias) {
        return new FdSocialsecurityCustomer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdSocialsecurityCustomer rename(String name) {
        return new FdSocialsecurityCustomer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdSocialsecurityCustomer rename(Name name) {
        return new FdSocialsecurityCustomer(name, null);
    }
}
