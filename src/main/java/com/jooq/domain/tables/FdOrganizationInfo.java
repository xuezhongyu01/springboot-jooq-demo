/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.FdOrganizationInfoOrganizationType;
import com.jooq.domain.tables.records.FdOrganizationInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 查询数据统计表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdOrganizationInfo extends TableImpl<FdOrganizationInfoRecord> {

    private static final long serialVersionUID = -1413594252;

    /**
     * The reference instance of <code>xbkj.fd_organization_info</code>
     */
    public static final FdOrganizationInfo FD_ORGANIZATION_INFO = new FdOrganizationInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdOrganizationInfoRecord> getRecordType() {
        return FdOrganizationInfoRecord.class;
    }

    /**
     * The column <code>xbkj.fd_organization_info.id</code>. 主键
     */
    public final TableField<FdOrganizationInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_organization_info.member_id</code>. 用户id
     */
    public final TableField<FdOrganizationInfoRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>xbkj.fd_organization_info.organization_type</code>. 机构类型(运营商,电商，网银,公积金，社保)
     */
    public final TableField<FdOrganizationInfoRecord, FdOrganizationInfoOrganizationType> ORGANIZATION_TYPE = createField("organization_type", org.jooq.impl.SQLDataType.VARCHAR(14).asEnumDataType(com.jooq.domain.enums.FdOrganizationInfoOrganizationType.class), this, "机构类型(运营商,电商，网银,公积金，社保)");

    /**
     * The column <code>xbkj.fd_organization_info.organization_id</code>. 目标机构 ID(欲采集的目标)
     */
    public final TableField<FdOrganizationInfoRecord, String> ORGANIZATION_ID = createField("organization_id", org.jooq.impl.SQLDataType.VARCHAR(32), this, "目标机构 ID(欲采集的目标)");

    /**
     * The column <code>xbkj.fd_organization_info.username</code>. 用户名
     */
    public final TableField<FdOrganizationInfoRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(64), this, "用户名");

    /**
     * The column <code>xbkj.fd_organization_info.password</code>. 密码
     */
    public final TableField<FdOrganizationInfoRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(64), this, "密码");

    /**
     * The column <code>xbkj.fd_organization_info.remark</code>. 备注
     */
    public final TableField<FdOrganizationInfoRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "备注");

    /**
     * The column <code>xbkj.fd_organization_info.create_at</code>. 创建时间
     */
    public final TableField<FdOrganizationInfoRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_organization_info.update_at</code>. 更新时间
     */
    public final TableField<FdOrganizationInfoRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_organization_info.del_flag</code>. 删除标志
     */
    public final TableField<FdOrganizationInfoRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_organization_info.version</code>.
     */
    public final TableField<FdOrganizationInfoRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_organization_info</code> table reference
     */
    public FdOrganizationInfo() {
        this(DSL.name("fd_organization_info"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_organization_info</code> table reference
     */
    public FdOrganizationInfo(String alias) {
        this(DSL.name(alias), FD_ORGANIZATION_INFO);
    }

    /**
     * Create an aliased <code>xbkj.fd_organization_info</code> table reference
     */
    public FdOrganizationInfo(Name alias) {
        this(alias, FD_ORGANIZATION_INFO);
    }

    private FdOrganizationInfo(Name alias, Table<FdOrganizationInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdOrganizationInfo(Name alias, Table<FdOrganizationInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "查询数据统计表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_ORGANIZATION_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdOrganizationInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_ORGANIZATION_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdOrganizationInfoRecord> getPrimaryKey() {
        return Keys.KEY_FD_ORGANIZATION_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdOrganizationInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<FdOrganizationInfoRecord>>asList(Keys.KEY_FD_ORGANIZATION_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdOrganizationInfo as(String alias) {
        return new FdOrganizationInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdOrganizationInfo as(Name alias) {
        return new FdOrganizationInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdOrganizationInfo rename(String name) {
        return new FdOrganizationInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdOrganizationInfo rename(Name name) {
        return new FdOrganizationInfo(name, null);
    }
}
