/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.UcMemberLoginRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户登录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcMemberLogin extends TableImpl<UcMemberLoginRecord> {

    private static final long serialVersionUID = 144116513;

    /**
     * The reference instance of <code>xbkj.uc_member_login</code>
     */
    public static final UcMemberLogin UC_MEMBER_LOGIN = new UcMemberLogin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcMemberLoginRecord> getRecordType() {
        return UcMemberLoginRecord.class;
    }

    /**
     * The column <code>xbkj.uc_member_login.id</code>.
     */
    public final TableField<UcMemberLoginRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_member_login.member_id</code>. 用户id
     */
    public final TableField<UcMemberLoginRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>xbkj.uc_member_login.login_time</code>. 登录时间
     */
    public final TableField<UcMemberLoginRecord, Timestamp> LOGIN_TIME = createField("login_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "登录时间");

    /**
     * The column <code>xbkj.uc_member_login.login_ip</code>. 登录ip
     */
    public final TableField<UcMemberLoginRecord, String> LOGIN_IP = createField("login_ip", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "登录ip");

    /**
     * The column <code>xbkj.uc_member_login.login_source</code>. 登录来源
     */
    public final TableField<UcMemberLoginRecord, String> LOGIN_SOURCE = createField("login_source", org.jooq.impl.SQLDataType.VARCHAR(10), this, "登录来源");

    /**
     * The column <code>xbkj.uc_member_login.user_agent</code>. 用户代理信息
     */
    public final TableField<UcMemberLoginRecord, String> USER_AGENT = createField("user_agent", org.jooq.impl.SQLDataType.VARCHAR(255), this, "用户代理信息");

    /**
     * The column <code>xbkj.uc_member_login.device</code>. 设备序列号
     */
    public final TableField<UcMemberLoginRecord, String> DEVICE = createField("device", org.jooq.impl.SQLDataType.VARCHAR(256), this, "设备序列号");

    /**
     * The column <code>xbkj.uc_member_login.position</code>. 地理位置
     */
    public final TableField<UcMemberLoginRecord, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR(256), this, "地理位置");

    /**
     * The column <code>xbkj.uc_member_login.create_at</code>. 创建时间
     */
    public final TableField<UcMemberLoginRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * Create a <code>xbkj.uc_member_login</code> table reference
     */
    public UcMemberLogin() {
        this(DSL.name("uc_member_login"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_member_login</code> table reference
     */
    public UcMemberLogin(String alias) {
        this(DSL.name(alias), UC_MEMBER_LOGIN);
    }

    /**
     * Create an aliased <code>xbkj.uc_member_login</code> table reference
     */
    public UcMemberLogin(Name alias) {
        this(alias, UC_MEMBER_LOGIN);
    }

    private UcMemberLogin(Name alias, Table<UcMemberLoginRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcMemberLogin(Name alias, Table<UcMemberLoginRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户登录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_MEMBER_LOGIN_INDEX_MEMBER_ID, Indexes.UC_MEMBER_LOGIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcMemberLoginRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_MEMBER_LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcMemberLoginRecord> getPrimaryKey() {
        return Keys.KEY_UC_MEMBER_LOGIN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcMemberLoginRecord>> getKeys() {
        return Arrays.<UniqueKey<UcMemberLoginRecord>>asList(Keys.KEY_UC_MEMBER_LOGIN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcMemberLogin as(String alias) {
        return new UcMemberLogin(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcMemberLogin as(Name alias) {
        return new UcMemberLogin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcMemberLogin rename(String name) {
        return new UcMemberLogin(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcMemberLogin rename(Name name) {
        return new UcMemberLogin(name, null);
    }
}
