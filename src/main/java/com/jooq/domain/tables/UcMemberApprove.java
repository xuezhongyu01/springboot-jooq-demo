/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcMemberApproveApproveStatus;
import com.jooq.domain.enums.UcMemberApproveApproveType;
import com.jooq.domain.tables.records.UcMemberApproveRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户认证表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcMemberApprove extends TableImpl<UcMemberApproveRecord> {

    private static final long serialVersionUID = 1007250737;

    /**
     * The reference instance of <code>xbkj.uc_member_approve</code>
     */
    public static final UcMemberApprove UC_MEMBER_APPROVE = new UcMemberApprove();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcMemberApproveRecord> getRecordType() {
        return UcMemberApproveRecord.class;
    }

    /**
     * The column <code>xbkj.uc_member_approve.id</code>.
     */
    public final TableField<UcMemberApproveRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_member_approve.member_id</code>. 用户id
     */
    public final TableField<UcMemberApproveRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>xbkj.uc_member_approve.approve_type</code>. 认证类型:基本信息,身份证,运营商,社保，电商,公积金，人脸认证,芝麻认证，信用卡认证,学历认证,京东认证，淘宝认证，储蓄卡认证
     */
    public final TableField<UcMemberApproveRecord, UcMemberApproveApproveType> APPROVE_TYPE = createField("approve_type", org.jooq.impl.SQLDataType.VARCHAR(14).nullable(false).asEnumDataType(com.jooq.domain.enums.UcMemberApproveApproveType.class), this, "认证类型:基本信息,身份证,运营商,社保，电商,公积金，人脸认证,芝麻认证，信用卡认证,学历认证,京东认证，淘宝认证，储蓄卡认证");

    /**
     * The column <code>xbkj.uc_member_approve.approve_status</code>. 认证状态,未认证，认证中，成功， 失败
     */
    public final TableField<UcMemberApproveRecord, UcMemberApproveApproveStatus> APPROVE_STATUS = createField("approve_status", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("unapproved", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.UcMemberApproveApproveStatus.class), this, "认证状态,未认证，认证中，成功， 失败");

    /**
     * The column <code>xbkj.uc_member_approve.approve_time</code>. 认证通过时间
     */
    public final TableField<UcMemberApproveRecord, Timestamp> APPROVE_TIME = createField("approve_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "认证通过时间");

    /**
     * The column <code>xbkj.uc_member_approve.third_service_no</code>. 第三方公司关联
     */
    public final TableField<UcMemberApproveRecord, String> THIRD_SERVICE_NO = createField("third_service_no", org.jooq.impl.SQLDataType.VARCHAR(120), this, "第三方公司关联");

    /**
     * The column <code>xbkj.uc_member_approve.create_at</code>. 创建时间
     */
    public final TableField<UcMemberApproveRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_member_approve.update_at</code>. 更新时间
     */
    public final TableField<UcMemberApproveRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_member_approve.del_flag</code>. 删除标志
     */
    public final TableField<UcMemberApproveRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_member_approve.version</code>.
     */
    public final TableField<UcMemberApproveRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_member_approve</code> table reference
     */
    public UcMemberApprove() {
        this(DSL.name("uc_member_approve"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_member_approve</code> table reference
     */
    public UcMemberApprove(String alias) {
        this(DSL.name(alias), UC_MEMBER_APPROVE);
    }

    /**
     * Create an aliased <code>xbkj.uc_member_approve</code> table reference
     */
    public UcMemberApprove(Name alias) {
        this(alias, UC_MEMBER_APPROVE);
    }

    private UcMemberApprove(Name alias, Table<UcMemberApproveRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcMemberApprove(Name alias, Table<UcMemberApproveRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户认证表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_MEMBER_APPROVE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcMemberApproveRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_MEMBER_APPROVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcMemberApproveRecord> getPrimaryKey() {
        return Keys.KEY_UC_MEMBER_APPROVE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcMemberApproveRecord>> getKeys() {
        return Arrays.<UniqueKey<UcMemberApproveRecord>>asList(Keys.KEY_UC_MEMBER_APPROVE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcMemberApprove as(String alias) {
        return new UcMemberApprove(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcMemberApprove as(Name alias) {
        return new UcMemberApprove(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcMemberApprove rename(String name) {
        return new UcMemberApprove(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcMemberApprove rename(Name name) {
        return new UcMemberApprove(name, null);
    }
}
