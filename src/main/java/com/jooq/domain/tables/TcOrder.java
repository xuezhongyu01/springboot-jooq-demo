/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.TcOrderOrderType;
import com.jooq.domain.enums.TcOrderPayType;
import com.jooq.domain.enums.TcOrderPayedPlatformFlag;
import com.jooq.domain.enums.TcOrderStatus;
import com.jooq.domain.tables.records.TcOrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 课程购买表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcOrder extends TableImpl<TcOrderRecord> {

    private static final long serialVersionUID = 1265339779;

    /**
     * The reference instance of <code>xbkj.tc_order</code>
     */
    public static final TcOrder TC_ORDER = new TcOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcOrderRecord> getRecordType() {
        return TcOrderRecord.class;
    }

    /**
     * The column <code>xbkj.tc_order.id</code>. 交易ID
     */
    public final TableField<TcOrderRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "交易ID");

    /**
     * The column <code>xbkj.tc_order.order_no</code>. 交易号
     */
    public final TableField<TcOrderRecord, String> ORDER_NO = createField("order_no", org.jooq.impl.SQLDataType.VARCHAR(50), this, "交易号");

    /**
     * The column <code>xbkj.tc_order.member_id</code>. 用户ID
     */
    public final TableField<TcOrderRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户ID");

    /**
     * The column <code>xbkj.tc_order.shop_id</code>. 门店ID
     */
    public final TableField<TcOrderRecord, Long> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "门店ID");

    /**
     * The column <code>xbkj.tc_order.course_id</code>. 课程ID
     */
    public final TableField<TcOrderRecord, Long> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.BIGINT, this, "课程ID");

    /**
     * The column <code>xbkj.tc_order.order_amount</code>. 订单金额
     */
    public final TableField<TcOrderRecord, BigDecimal> ORDER_AMOUNT = createField("order_amount", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "订单金额");

    /**
     * The column <code>xbkj.tc_order.used_pay_amount</code>. 支付金额
     */
    public final TableField<TcOrderRecord, BigDecimal> USED_PAY_AMOUNT = createField("used_pay_amount", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "支付金额");

    /**
     * The column <code>xbkj.tc_order.used_coupon_amount</code>. 使用满减券金额
     */
    public final TableField<TcOrderRecord, BigDecimal> USED_COUPON_AMOUNT = createField("used_coupon_amount", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "使用满减券金额");

    /**
     * The column <code>xbkj.tc_order.coupon_amount_id</code>. 使用满减券ID
     */
    public final TableField<TcOrderRecord, Long> COUPON_AMOUNT_ID = createField("coupon_amount_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "使用满减券ID");

    /**
     * The column <code>xbkj.tc_order.coupon_rate_id</code>. 免息劵ID
     */
    public final TableField<TcOrderRecord, Long> COUPON_RATE_ID = createField("coupon_rate_id", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "免息劵ID");

    /**
     * The column <code>xbkj.tc_order.extra_annualized_rate</code>. 免息劵的利率
     */
    public final TableField<TcOrderRecord, BigDecimal> EXTRA_ANNUALIZED_RATE = createField("extra_annualized_rate", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "免息劵的利率");

    /**
     * The column <code>xbkj.tc_order.extra_amout</code>. 使用免息劵减免利息
     */
    public final TableField<TcOrderRecord, BigDecimal> EXTRA_AMOUT = createField("extra_amout", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "使用免息劵减免利息");

    /**
     * The column <code>xbkj.tc_order.free_installment_num</code>. 免息期数
     */
    public final TableField<TcOrderRecord, Integer> FREE_INSTALLMENT_NUM = createField("free_installment_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "免息期数");

    /**
     * The column <code>xbkj.tc_order.installment_num</code>. 分期期数
     */
    public final TableField<TcOrderRecord, Integer> INSTALLMENT_NUM = createField("installment_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分期期数");

    /**
     * The column <code>xbkj.tc_order.payable_interest</code>. 应付利息
     */
    public final TableField<TcOrderRecord, BigDecimal> PAYABLE_INTEREST = createField("payable_interest", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "应付利息");

    /**
     * The column <code>xbkj.tc_order.total_interest</code>. 总利息=应付利息+ 减免利息
     */
    public final TableField<TcOrderRecord, BigDecimal> TOTAL_INTEREST = createField("total_interest", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "总利息=应付利息+ 减免利息");

    /**
     * The column <code>xbkj.tc_order.total_principal</code>. 总本金
     */
    public final TableField<TcOrderRecord, BigDecimal> TOTAL_PRINCIPAL = createField("total_principal", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "总本金");

    /**
     * The column <code>xbkj.tc_order.received_interest</code>. 已归还利息
     */
    public final TableField<TcOrderRecord, BigDecimal> RECEIVED_INTEREST = createField("received_interest", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "已归还利息");

    /**
     * The column <code>xbkj.tc_order.received_principal</code>. 已归还本金
     */
    public final TableField<TcOrderRecord, BigDecimal> RECEIVED_PRINCIPAL = createField("received_principal", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "已归还本金");

    /**
     * The column <code>xbkj.tc_order.platform_amount</code>. 平台分成
     */
    public final TableField<TcOrderRecord, BigDecimal> PLATFORM_AMOUNT = createField("platform_amount", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "平台分成");

    /**
     * The column <code>xbkj.tc_order.targer_amount</code>. 机构或者门店分成
     */
    public final TableField<TcOrderRecord, BigDecimal> TARGER_AMOUNT = createField("targer_amount", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "机构或者门店分成");

    /**
     * The column <code>xbkj.tc_order.free_amount</code>. 手续费
     */
    public final TableField<TcOrderRecord, BigDecimal> FREE_AMOUNT = createField("free_amount", org.jooq.impl.SQLDataType.DECIMAL(14, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "手续费");

    /**
     * The column <code>xbkj.tc_order.order_time</code>. 下单时间
     */
    public final TableField<TcOrderRecord, Timestamp> ORDER_TIME = createField("order_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "下单时间");

    /**
     * The column <code>xbkj.tc_order.order_type</code>. 线上，线下
     */
    public final TableField<TcOrderRecord, TcOrderOrderType> ORDER_TYPE = createField("order_type", org.jooq.impl.SQLDataType.VARCHAR(7).asEnumDataType(com.jooq.domain.enums.TcOrderOrderType.class), this, "线上，线下");

    /**
     * The column <code>xbkj.tc_order.tran_no</code>. 第三方交易单号
     */
    public final TableField<TcOrderRecord, String> TRAN_NO = createField("tran_no", org.jooq.impl.SQLDataType.VARCHAR(255), this, "第三方交易单号");

    /**
     * The column <code>xbkj.tc_order.batch_no</code>. 易宝批量单号
     */
    public final TableField<TcOrderRecord, String> BATCH_NO = createField("batch_no", org.jooq.impl.SQLDataType.VARCHAR(255), this, "易宝批量单号");

    /**
     * The column <code>xbkj.tc_order.refund_no</code>. 第三方-退款单号
     */
    public final TableField<TcOrderRecord, String> REFUND_NO = createField("refund_no", org.jooq.impl.SQLDataType.VARCHAR(255), this, "第三方-退款单号");

    /**
     * The column <code>xbkj.tc_order.status</code>. 下单状态（未支付，支付失败，支付成功，支付处理中，部分还款，全部还清,退款）
     */
    public final TableField<TcOrderRecord, TcOrderStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false).defaultValue(org.jooq.impl.DSL.inline("unpayed", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.TcOrderStatus.class), this, "下单状态（未支付，支付失败，支付成功，支付处理中，部分还款，全部还清,退款）");

    /**
     * The column <code>xbkj.tc_order.pay_type</code>. 网银支付,移动收银台,微信支付,APP 支付-WX,APP支付-ZFB,学贝分期支付
     */
    public final TableField<TcOrderRecord, TcOrderPayType> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.VARCHAR(9).asEnumDataType(com.jooq.domain.enums.TcOrderPayType.class), this, "网银支付,移动收银台,微信支付,APP 支付-WX,APP支付-ZFB,学贝分期支付");

    /**
     * The column <code>xbkj.tc_order.payed_time</code>. 最近待付款时间
     */
    public final TableField<TcOrderRecord, Timestamp> PAYED_TIME = createField("payed_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近待付款时间");

    /**
     * The column <code>xbkj.tc_order.payed_platform_flag</code>. 是否付给平台，资方分账给平台
     */
    public final TableField<TcOrderRecord, TcOrderPayedPlatformFlag> PAYED_PLATFORM_FLAG = createField("payed_platform_flag", org.jooq.impl.SQLDataType.VARCHAR(6).nullable(false).defaultValue(org.jooq.impl.DSL.inline("unpay", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.TcOrderPayedPlatformFlag.class), this, "是否付给平台，资方分账给平台");

    /**
     * The column <code>xbkj.tc_order.remarks</code>.
     */
    public final TableField<TcOrderRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xbkj.tc_order.create_at</code>. 创建时间
     */
    public final TableField<TcOrderRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.tc_order.update_at</code>. 更新时间
     */
    public final TableField<TcOrderRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.tc_order.del_flag</code>. 删除标志
     */
    public final TableField<TcOrderRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.tc_order.version</code>.
     */
    public final TableField<TcOrderRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.tc_order</code> table reference
     */
    public TcOrder() {
        this(DSL.name("tc_order"), null);
    }

    /**
     * Create an aliased <code>xbkj.tc_order</code> table reference
     */
    public TcOrder(String alias) {
        this(DSL.name(alias), TC_ORDER);
    }

    /**
     * Create an aliased <code>xbkj.tc_order</code> table reference
     */
    public TcOrder(Name alias) {
        this(alias, TC_ORDER);
    }

    private TcOrder(Name alias, Table<TcOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcOrder(Name alias, Table<TcOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "课程购买表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TC_ORDER_INDEX_TRANSACTION_TIME, Indexes.TC_ORDER_PRIMARY, Indexes.TC_ORDER_REFUND_NO, Indexes.TC_ORDER_TRAN_NO, Indexes.TC_ORDER_UNIQUE_TRANSACTION_NO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TcOrderRecord, Long> getIdentity() {
        return Keys.IDENTITY_TC_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TcOrderRecord> getPrimaryKey() {
        return Keys.KEY_TC_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TcOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<TcOrderRecord>>asList(Keys.KEY_TC_ORDER_PRIMARY, Keys.KEY_TC_ORDER_UNIQUE_TRANSACTION_NO, Keys.KEY_TC_ORDER_TRAN_NO, Keys.KEY_TC_ORDER_REFUND_NO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TcOrder as(String alias) {
        return new TcOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TcOrder as(Name alias) {
        return new TcOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcOrder rename(String name) {
        return new TcOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcOrder rename(Name name) {
        return new TcOrder(name, null);
    }
}
