/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.McGiftTemplateDrawCondition;
import com.jooq.domain.enums.McGiftTemplateSendConditionArea;
import com.jooq.domain.enums.McGiftTemplateSender;
import com.jooq.domain.enums.McGiftTemplateStatus;
import com.jooq.domain.tables.records.McGiftTemplateRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 礼品
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class McGiftTemplate extends TableImpl<McGiftTemplateRecord> {

    private static final long serialVersionUID = -946135753;

    /**
     * The reference instance of <code>xbkj.mc_gift_template</code>
     */
    public static final McGiftTemplate MC_GIFT_TEMPLATE = new McGiftTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<McGiftTemplateRecord> getRecordType() {
        return McGiftTemplateRecord.class;
    }

    /**
     * The column <code>xbkj.mc_gift_template.id</code>.
     */
    public final TableField<McGiftTemplateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.mc_gift_template.name</code>. 礼品名称
     */
    public final TableField<McGiftTemplateRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "礼品名称");

    /**
     * The column <code>xbkj.mc_gift_template.gift_amount</code>. 礼品价值
     */
    public final TableField<McGiftTemplateRecord, BigDecimal> GIFT_AMOUNT = createField("gift_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "礼品价值");

    /**
     * The column <code>xbkj.mc_gift_template.sender</code>. 发放人 培训机构、单店、平台 
     */
    public final TableField<McGiftTemplateRecord, McGiftTemplateSender> SENDER = createField("sender", org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false).defaultValue(org.jooq.impl.DSL.inline("shop", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.McGiftTemplateSender.class), this, "发放人 培训机构、单店、平台 ");

    /**
     * The column <code>xbkj.mc_gift_template.send_id</code>. send_id 针对机构，门店，课程发放的id,如果是平台默认是0
     */
    public final TableField<McGiftTemplateRecord, Long> SEND_ID = createField("send_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "send_id 针对机构，门店，课程发放的id,如果是平台默认是0");

    /**
     * The column <code>xbkj.mc_gift_template.start_date</code>. 赠送开始时间
     */
    public final TableField<McGiftTemplateRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "赠送开始时间");

    /**
     * The column <code>xbkj.mc_gift_template.end_date</code>. 赠送结束时间
     */
    public final TableField<McGiftTemplateRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "赠送结束时间");

    /**
     * The column <code>xbkj.mc_gift_template.send_count</code>. 赠送数量
     */
    public final TableField<McGiftTemplateRecord, Integer> SEND_COUNT = createField("send_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "赠送数量");

    /**
     * The column <code>xbkj.mc_gift_template.draw_count</code>. 已领数量
     */
    public final TableField<McGiftTemplateRecord, Integer> DRAW_COUNT = createField("draw_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "已领数量");

    /**
     * The column <code>xbkj.mc_gift_template.send_condition_area</code>. 赠送 培训机构、单店、课程 平台
     */
    public final TableField<McGiftTemplateRecord, McGiftTemplateSendConditionArea> SEND_CONDITION_AREA = createField("send_condition_area", org.jooq.impl.SQLDataType.VARCHAR(12).asEnumDataType(com.jooq.domain.enums.McGiftTemplateSendConditionArea.class), this, "赠送 培训机构、单店、课程 平台");

    /**
     * The column <code>xbkj.mc_gift_template.use_condition</code>. 赠送范围，培训机构ID数组，以英文逗号分隔, 单店ID数组，课程ID数组
     */
    public final TableField<McGiftTemplateRecord, String> USE_CONDITION = createField("use_condition", org.jooq.impl.SQLDataType.VARCHAR(5000), this, "赠送范围，培训机构ID数组，以英文逗号分隔, 单店ID数组，课程ID数组");

    /**
     * The column <code>xbkj.mc_gift_template.remark</code>. 备注
     */
    public final TableField<McGiftTemplateRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(255), this, "备注");

    /**
     * The column <code>xbkj.mc_gift_template.status</code>. 状态：保存，正常，禁用，审核失败，提交中，过期
     */
    public final TableField<McGiftTemplateRecord, McGiftTemplateStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("save", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.McGiftTemplateStatus.class), this, "状态：保存，正常，禁用，审核失败，提交中，过期");

    /**
     * The column <code>xbkj.mc_gift_template.draw_condition</code>. 领取条件，任意消费，单笔消费大于等于,报名试听课,首次消费
     */
    public final TableField<McGiftTemplateRecord, McGiftTemplateDrawCondition> DRAW_CONDITION = createField("draw_condition", org.jooq.impl.SQLDataType.VARCHAR(14).asEnumDataType(com.jooq.domain.enums.McGiftTemplateDrawCondition.class), this, "领取条件，任意消费，单笔消费大于等于,报名试听课,首次消费");

    /**
     * The column <code>xbkj.mc_gift_template.draw_Amount</code>. 领取条件，消费金额
     */
    public final TableField<McGiftTemplateRecord, BigDecimal> DRAW_AMOUNT = createField("draw_Amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "领取条件，消费金额");

    /**
     * The column <code>xbkj.mc_gift_template.use_note</code>.
     */
    public final TableField<McGiftTemplateRecord, String> USE_NOTE = createField("use_note", org.jooq.impl.SQLDataType.VARCHAR(5000), this, "");

    /**
     * The column <code>xbkj.mc_gift_template.create_at</code>. 创建时间
     */
    public final TableField<McGiftTemplateRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.mc_gift_template.update_at</code>. 更新时间
     */
    public final TableField<McGiftTemplateRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.mc_gift_template.del_flag</code>. 删除标志
     */
    public final TableField<McGiftTemplateRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.mc_gift_template.version</code>.
     */
    public final TableField<McGiftTemplateRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>xbkj.mc_gift_template.create_by</code>. 创建者
     */
    public final TableField<McGiftTemplateRecord, Long> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.BIGINT, this, "创建者");

    /**
     * Create a <code>xbkj.mc_gift_template</code> table reference
     */
    public McGiftTemplate() {
        this(DSL.name("mc_gift_template"), null);
    }

    /**
     * Create an aliased <code>xbkj.mc_gift_template</code> table reference
     */
    public McGiftTemplate(String alias) {
        this(DSL.name(alias), MC_GIFT_TEMPLATE);
    }

    /**
     * Create an aliased <code>xbkj.mc_gift_template</code> table reference
     */
    public McGiftTemplate(Name alias) {
        this(alias, MC_GIFT_TEMPLATE);
    }

    private McGiftTemplate(Name alias, Table<McGiftTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private McGiftTemplate(Name alias, Table<McGiftTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "礼品");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MC_GIFT_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<McGiftTemplateRecord, Long> getIdentity() {
        return Keys.IDENTITY_MC_GIFT_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<McGiftTemplateRecord> getPrimaryKey() {
        return Keys.KEY_MC_GIFT_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<McGiftTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<McGiftTemplateRecord>>asList(Keys.KEY_MC_GIFT_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public McGiftTemplate as(String alias) {
        return new McGiftTemplate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public McGiftTemplate as(Name alias) {
        return new McGiftTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public McGiftTemplate rename(String name) {
        return new McGiftTemplate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public McGiftTemplate rename(Name name) {
        return new McGiftTemplate(name, null);
    }
}
