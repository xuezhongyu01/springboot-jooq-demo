/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcMemberInfoMarriage;
import com.jooq.domain.tables.records.UcMemberInfoRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 会员信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcMemberInfo extends TableImpl<UcMemberInfoRecord> {

    private static final long serialVersionUID = 1070826015;

    /**
     * The reference instance of <code>xbkj.uc_member_info</code>
     */
    public static final UcMemberInfo UC_MEMBER_INFO = new UcMemberInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcMemberInfoRecord> getRecordType() {
        return UcMemberInfoRecord.class;
    }

    /**
     * The column <code>xbkj.uc_member_info.id</code>.
     */
    public final TableField<UcMemberInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_member_info.member_id</code>. 用户id
     */
    public final TableField<UcMemberInfoRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>xbkj.uc_member_info.birthday</code>. 生日
     */
    public final TableField<UcMemberInfoRecord, Date> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.DATE, this, "生日");

    /**
     * The column <code>xbkj.uc_member_info.province</code>. 所在省份
     */
    public final TableField<UcMemberInfoRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(16), this, "所在省份");

    /**
     * The column <code>xbkj.uc_member_info.area</code>. 区域
     */
    public final TableField<UcMemberInfoRecord, String> AREA = createField("area", org.jooq.impl.SQLDataType.VARCHAR(255), this, "区域");

    /**
     * The column <code>xbkj.uc_member_info.city</code>. 所在城市
     */
    public final TableField<UcMemberInfoRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(16), this, "所在城市");

    /**
     * The column <code>xbkj.uc_member_info.address</code>. 详细地址
     */
    public final TableField<UcMemberInfoRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "详细地址");

    /**
     * The column <code>xbkj.uc_member_info.email</code>. 邮箱
     */
    public final TableField<UcMemberInfoRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255), this, "邮箱");

    /**
     * The column <code>xbkj.uc_member_info.nation</code>. 民族
     */
    public final TableField<UcMemberInfoRecord, String> NATION = createField("nation", org.jooq.impl.SQLDataType.VARCHAR(255), this, "民族");

    /**
     * The column <code>xbkj.uc_member_info.receiving_address</code>. 收货地址
     */
    public final TableField<UcMemberInfoRecord, String> RECEIVING_ADDRESS = createField("receiving_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "收货地址");

    /**
     * The column <code>xbkj.uc_member_info.permanent_address</code>. 户籍地址
     */
    public final TableField<UcMemberInfoRecord, String> PERMANENT_ADDRESS = createField("permanent_address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "户籍地址");

    /**
     * The column <code>xbkj.uc_member_info.identity_dateend</code>. 身份证有效期限结束时间
     */
    public final TableField<UcMemberInfoRecord, Date> IDENTITY_DATEEND = createField("identity_dateend", org.jooq.impl.SQLDataType.DATE, this, "身份证有效期限结束时间");

    /**
     * The column <code>xbkj.uc_member_info.identity_datestart</code>. 身份证有效期限开始时间
     */
    public final TableField<UcMemberInfoRecord, Date> IDENTITY_DATESTART = createField("identity_datestart", org.jooq.impl.SQLDataType.DATE, this, "身份证有效期限开始时间");

    /**
     * The column <code>xbkj.uc_member_info.identity_singorgan</code>. 身份证签发机关
     */
    public final TableField<UcMemberInfoRecord, String> IDENTITY_SINGORGAN = createField("identity_singorgan", org.jooq.impl.SQLDataType.VARCHAR(255), this, "身份证签发机关");

    /**
     * The column <code>xbkj.uc_member_info.identity_frontimgurl</code>. 身份证正面照
     */
    public final TableField<UcMemberInfoRecord, String> IDENTITY_FRONTIMGURL = createField("identity_frontimgurl", org.jooq.impl.SQLDataType.VARCHAR(255), this, "身份证正面照");

    /**
     * The column <code>xbkj.uc_member_info.identity_backimgurl</code>. 身份证反面照
     */
    public final TableField<UcMemberInfoRecord, String> IDENTITY_BACKIMGURL = createField("identity_backimgurl", org.jooq.impl.SQLDataType.VARCHAR(255), this, "身份证反面照");

    /**
     * The column <code>xbkj.uc_member_info.face_imgurl</code>. 人脸识别图片链接(数组 逗号分割)
     */
    public final TableField<UcMemberInfoRecord, String> FACE_IMGURL = createField("face_imgurl", org.jooq.impl.SQLDataType.VARCHAR(3000), this, "人脸识别图片链接(数组 逗号分割)");

    /**
     * The column <code>xbkj.uc_member_info.identity_headimgurl</code>. 身份证头像照
     */
    public final TableField<UcMemberInfoRecord, String> IDENTITY_HEADIMGURL = createField("identity_headimgurl", org.jooq.impl.SQLDataType.VARCHAR(255), this, "身份证头像照");

    /**
     * The column <code>xbkj.uc_member_info.marriage</code>. 婚姻状况
     */
    public final TableField<UcMemberInfoRecord, UcMemberInfoMarriage> MARRIAGE = createField("marriage", org.jooq.impl.SQLDataType.VARCHAR(8).asEnumDataType(com.jooq.domain.enums.UcMemberInfoMarriage.class), this, "婚姻状况");

    /**
     * The column <code>xbkj.uc_member_info.latitude</code>. 纬度
     */
    public final TableField<UcMemberInfoRecord, Double> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.DOUBLE, this, "纬度");

    /**
     * The column <code>xbkj.uc_member_info.longitude</code>. 经度
     */
    public final TableField<UcMemberInfoRecord, Double> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.DOUBLE, this, "经度");

    /**
     * The column <code>xbkj.uc_member_info.create_at</code>. 创建时间
     */
    public final TableField<UcMemberInfoRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_member_info.update_at</code>. 更新时间
     */
    public final TableField<UcMemberInfoRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_member_info.del_flag</code>. 删除标志
     */
    public final TableField<UcMemberInfoRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_member_info.version</code>.
     */
    public final TableField<UcMemberInfoRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_member_info</code> table reference
     */
    public UcMemberInfo() {
        this(DSL.name("uc_member_info"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_member_info</code> table reference
     */
    public UcMemberInfo(String alias) {
        this(DSL.name(alias), UC_MEMBER_INFO);
    }

    /**
     * Create an aliased <code>xbkj.uc_member_info</code> table reference
     */
    public UcMemberInfo(Name alias) {
        this(alias, UC_MEMBER_INFO);
    }

    private UcMemberInfo(Name alias, Table<UcMemberInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcMemberInfo(Name alias, Table<UcMemberInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "会员信息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_MEMBER_INFO_PRIMARY, Indexes.UC_MEMBER_INFO_UNIQUE_MEMBER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcMemberInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_MEMBER_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcMemberInfoRecord> getPrimaryKey() {
        return Keys.KEY_UC_MEMBER_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcMemberInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<UcMemberInfoRecord>>asList(Keys.KEY_UC_MEMBER_INFO_PRIMARY, Keys.KEY_UC_MEMBER_INFO_UNIQUE_MEMBER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcMemberInfo as(String alias) {
        return new UcMemberInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcMemberInfo as(Name alias) {
        return new UcMemberInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcMemberInfo rename(String name) {
        return new UcMemberInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcMemberInfo rename(Name name) {
        return new UcMemberInfo(name, null);
    }
}
