/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.UcAuditionsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 试听课报名表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcAuditions extends TableImpl<UcAuditionsRecord> {

    private static final long serialVersionUID = 772443715;

    /**
     * The reference instance of <code>xbkj.uc_auditions</code>
     */
    public static final UcAuditions UC_AUDITIONS = new UcAuditions();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcAuditionsRecord> getRecordType() {
        return UcAuditionsRecord.class;
    }

    /**
     * The column <code>xbkj.uc_auditions.id</code>.
     */
    public final TableField<UcAuditionsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_auditions.course_id</code>. 课程id
     */
    public final TableField<UcAuditionsRecord, Long> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "课程id");

    /**
     * The column <code>xbkj.uc_auditions.course_name</code>. 报名课程名称
     */
    public final TableField<UcAuditionsRecord, String> COURSE_NAME = createField("course_name", org.jooq.impl.SQLDataType.VARCHAR(120), this, "报名课程名称");

    /**
     * The column <code>xbkj.uc_auditions.member_id</code>. 用户id
     */
    public final TableField<UcAuditionsRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>xbkj.uc_auditions.user_name</code>. 用户名
     */
    public final TableField<UcAuditionsRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户名");

    /**
     * The column <code>xbkj.uc_auditions.user_phone</code>. 用户名手机号码
     */
    public final TableField<UcAuditionsRecord, String> USER_PHONE = createField("user_phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户名手机号码");

    /**
     * The column <code>xbkj.uc_auditions.user_sex</code>. 用户名性别
     */
    public final TableField<UcAuditionsRecord, String> USER_SEX = createField("user_sex", org.jooq.impl.SQLDataType.VARCHAR(10), this, "用户名性别");

    /**
     * The column <code>xbkj.uc_auditions.sign_in</code>. 是否签到
     */
    public final TableField<UcAuditionsRecord, Boolean> SIGN_IN = createField("sign_in", org.jooq.impl.SQLDataType.BIT.defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否签到");

    /**
     * The column <code>xbkj.uc_auditions.apply_time</code>. 报名时间
     */
    public final TableField<UcAuditionsRecord, Timestamp> APPLY_TIME = createField("apply_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "报名时间");

    /**
     * The column <code>xbkj.uc_auditions.create_at</code>. 创建时间
     */
    public final TableField<UcAuditionsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_auditions.update_at</code>. 更新时间
     */
    public final TableField<UcAuditionsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_auditions.del_flag</code>. 删除标志
     */
    public final TableField<UcAuditionsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_auditions.version</code>.
     */
    public final TableField<UcAuditionsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_auditions</code> table reference
     */
    public UcAuditions() {
        this(DSL.name("uc_auditions"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_auditions</code> table reference
     */
    public UcAuditions(String alias) {
        this(DSL.name(alias), UC_AUDITIONS);
    }

    /**
     * Create an aliased <code>xbkj.uc_auditions</code> table reference
     */
    public UcAuditions(Name alias) {
        this(alias, UC_AUDITIONS);
    }

    private UcAuditions(Name alias, Table<UcAuditionsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcAuditions(Name alias, Table<UcAuditionsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "试听课报名表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_AUDITIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcAuditionsRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_AUDITIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcAuditionsRecord> getPrimaryKey() {
        return Keys.KEY_UC_AUDITIONS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcAuditionsRecord>> getKeys() {
        return Arrays.<UniqueKey<UcAuditionsRecord>>asList(Keys.KEY_UC_AUDITIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcAuditions as(String alias) {
        return new UcAuditions(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcAuditions as(Name alias) {
        return new UcAuditions(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcAuditions rename(String name) {
        return new UcAuditions(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcAuditions rename(Name name) {
        return new UcAuditions(name, null);
    }
}
