/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.TcOrderCommentsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TcOrderComments extends TableImpl<TcOrderCommentsRecord> {

    private static final long serialVersionUID = 1439902386;

    /**
     * The reference instance of <code>xbkj.tc_order_comments</code>
     */
    public static final TcOrderComments TC_ORDER_COMMENTS = new TcOrderComments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TcOrderCommentsRecord> getRecordType() {
        return TcOrderCommentsRecord.class;
    }

    /**
     * The column <code>xbkj.tc_order_comments.id</code>.
     */
    public final TableField<TcOrderCommentsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.tc_order_comments.order_id</code>. 订单ID
     */
    public final TableField<TcOrderCommentsRecord, Long> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.BIGINT, this, "订单ID");

    /**
     * The column <code>xbkj.tc_order_comments.organ_id</code>. 机构ID
     */
    public final TableField<TcOrderCommentsRecord, Long> ORGAN_ID = createField("organ_id", org.jooq.impl.SQLDataType.BIGINT, this, "机构ID");

    /**
     * The column <code>xbkj.tc_order_comments.course_id</code>. 课程ID
     */
    public final TableField<TcOrderCommentsRecord, Long> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.BIGINT, this, "课程ID");

    /**
     * The column <code>xbkj.tc_order_comments.member_id</code>. 用户ID
     */
    public final TableField<TcOrderCommentsRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户ID");

    /**
     * The column <code>xbkj.tc_order_comments.shop_id</code>. 门店ID
     */
    public final TableField<TcOrderCommentsRecord, Long> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.BIGINT, this, "门店ID");

    /**
     * The column <code>xbkj.tc_order_comments.content</code>. 评论内容
     */
    public final TableField<TcOrderCommentsRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(5000), this, "评论内容");

    /**
     * The column <code>xbkj.tc_order_comments.star</code>. 星级
     */
    public final TableField<TcOrderCommentsRecord, Integer> STAR = createField("star", org.jooq.impl.SQLDataType.INTEGER, this, "星级");

    /**
     * The column <code>xbkj.tc_order_comments.remarks</code>.
     */
    public final TableField<TcOrderCommentsRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xbkj.tc_order_comments.create_at</code>. 创建时间
     */
    public final TableField<TcOrderCommentsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>xbkj.tc_order_comments.update_at</code>. 更新时间
     */
    public final TableField<TcOrderCommentsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.tc_order_comments.del_flag</code>. 删除标志
     */
    public final TableField<TcOrderCommentsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false), this, "删除标志");

    /**
     * The column <code>xbkj.tc_order_comments.version</code>.
     */
    public final TableField<TcOrderCommentsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>xbkj.tc_order_comments</code> table reference
     */
    public TcOrderComments() {
        this(DSL.name("tc_order_comments"), null);
    }

    /**
     * Create an aliased <code>xbkj.tc_order_comments</code> table reference
     */
    public TcOrderComments(String alias) {
        this(DSL.name(alias), TC_ORDER_COMMENTS);
    }

    /**
     * Create an aliased <code>xbkj.tc_order_comments</code> table reference
     */
    public TcOrderComments(Name alias) {
        this(alias, TC_ORDER_COMMENTS);
    }

    private TcOrderComments(Name alias, Table<TcOrderCommentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TcOrderComments(Name alias, Table<TcOrderCommentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TC_ORDER_COMMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TcOrderCommentsRecord, Long> getIdentity() {
        return Keys.IDENTITY_TC_ORDER_COMMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TcOrderCommentsRecord> getPrimaryKey() {
        return Keys.KEY_TC_ORDER_COMMENTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TcOrderCommentsRecord>> getKeys() {
        return Arrays.<UniqueKey<TcOrderCommentsRecord>>asList(Keys.KEY_TC_ORDER_COMMENTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TcOrderComments as(String alias) {
        return new TcOrderComments(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TcOrderComments as(Name alias) {
        return new TcOrderComments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TcOrderComments rename(String name) {
        return new TcOrderComments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TcOrderComments rename(Name name) {
        return new TcOrderComments(name, null);
    }
}
