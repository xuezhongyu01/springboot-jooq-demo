/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdProviderCalledTimesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 每月被叫时长
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderCalledTimes extends TableImpl<FdProviderCalledTimesRecord> {

    private static final long serialVersionUID = -1398552822;

    /**
     * The reference instance of <code>xbkj.fd_provider_called_times</code>
     */
    public static final FdProviderCalledTimes FD_PROVIDER_CALLED_TIMES = new FdProviderCalledTimes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdProviderCalledTimesRecord> getRecordType() {
        return FdProviderCalledTimesRecord.class;
    }

    /**
     * The column <code>xbkj.fd_provider_called_times.id</code>. 主键
     */
    public final TableField<FdProviderCalledTimesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_provider_called_times.account_id</code>. 账户id
     */
    public final TableField<FdProviderCalledTimesRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "账户id");

    /**
     * The column <code>xbkj.fd_provider_called_times.month</code>. 月份("YYYY-MM")
     */
    public final TableField<FdProviderCalledTimesRecord, Timestamp> MONTH = createField("month", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "月份(\"YYYY-MM\")");

    /**
     * The column <code>xbkj.fd_provider_called_times.seconds</code>. 总时长
     */
    public final TableField<FdProviderCalledTimesRecord, String> SECONDS = createField("seconds", org.jooq.impl.SQLDataType.VARCHAR(32), this, "总时长");

    /**
     * The column <code>xbkj.fd_provider_called_times.create_at</code>. 创建时间
     */
    public final TableField<FdProviderCalledTimesRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_provider_called_times.update_at</code>. 更新时间
     */
    public final TableField<FdProviderCalledTimesRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_provider_called_times.del_flag</code>. 删除标志
     */
    public final TableField<FdProviderCalledTimesRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_provider_called_times.version</code>.
     */
    public final TableField<FdProviderCalledTimesRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_provider_called_times</code> table reference
     */
    public FdProviderCalledTimes() {
        this(DSL.name("fd_provider_called_times"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_called_times</code> table reference
     */
    public FdProviderCalledTimes(String alias) {
        this(DSL.name(alias), FD_PROVIDER_CALLED_TIMES);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_called_times</code> table reference
     */
    public FdProviderCalledTimes(Name alias) {
        this(alias, FD_PROVIDER_CALLED_TIMES);
    }

    private FdProviderCalledTimes(Name alias, Table<FdProviderCalledTimesRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdProviderCalledTimes(Name alias, Table<FdProviderCalledTimesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "每月被叫时长");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_PROVIDER_CALLED_TIMES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdProviderCalledTimesRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_PROVIDER_CALLED_TIMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdProviderCalledTimesRecord> getPrimaryKey() {
        return Keys.KEY_FD_PROVIDER_CALLED_TIMES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdProviderCalledTimesRecord>> getKeys() {
        return Arrays.<UniqueKey<FdProviderCalledTimesRecord>>asList(Keys.KEY_FD_PROVIDER_CALLED_TIMES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderCalledTimes as(String alias) {
        return new FdProviderCalledTimes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderCalledTimes as(Name alias) {
        return new FdProviderCalledTimes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderCalledTimes rename(String name) {
        return new FdProviderCalledTimes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderCalledTimes rename(Name name) {
        return new FdProviderCalledTimes(name, null);
    }
}
