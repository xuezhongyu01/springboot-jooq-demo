/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdEbusinessAccountsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 电商账户信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdEbusinessAccounts extends TableImpl<FdEbusinessAccountsRecord> {

    private static final long serialVersionUID = 1345193875;

    /**
     * The reference instance of <code>xbkj.fd_ebusiness_accounts</code>
     */
    public static final FdEbusinessAccounts FD_EBUSINESS_ACCOUNTS = new FdEbusinessAccounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdEbusinessAccountsRecord> getRecordType() {
        return FdEbusinessAccountsRecord.class;
    }

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.id</code>. 账户ID
     */
    public final TableField<FdEbusinessAccountsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "账户ID");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.member_id</code>.
     */
    public final TableField<FdEbusinessAccountsRecord, Long> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.type</code>. 账户类型
     */
    public final TableField<FdEbusinessAccountsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "账户类型");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.account</code>. 用户名
     */
    public final TableField<FdEbusinessAccountsRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(32), this, "用户名");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.real_name</code>. 真实姓名
     */
    public final TableField<FdEbusinessAccountsRecord, String> REAL_NAME = createField("real_name", org.jooq.impl.SQLDataType.VARCHAR(32), this, "真实姓名");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.idcard</code>. 证件号
     */
    public final TableField<FdEbusinessAccountsRecord, String> IDCARD = createField("idcard", org.jooq.impl.SQLDataType.VARCHAR(32), this, "证件号");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.taobao_account</code>. 淘宝会员名
     */
    public final TableField<FdEbusinessAccountsRecord, String> TAOBAO_ACCOUNT = createField("taobao_account", org.jooq.impl.SQLDataType.VARCHAR(32), this, "淘宝会员名");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.nick_name</code>. 昵称
     */
    public final TableField<FdEbusinessAccountsRecord, String> NICK_NAME = createField("nick_name", org.jooq.impl.SQLDataType.VARCHAR(32), this, "昵称");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.birthday</code>. 生日
     */
    public final TableField<FdEbusinessAccountsRecord, String> BIRTHDAY = createField("birthday", org.jooq.impl.SQLDataType.VARCHAR(16), this, "生日");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.gender</code>. 性别
     */
    public final TableField<FdEbusinessAccountsRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR(16), this, "性别");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.phone</code>. 绑定手机
     */
    public final TableField<FdEbusinessAccountsRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(128), this, "绑定手机");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.email</code>. 绑定邮箱
     */
    public final TableField<FdEbusinessAccountsRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(64), this, "绑定邮箱");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.balance</code>. 账户余额
     */
    public final TableField<FdEbusinessAccountsRecord, String> BALANCE = createField("balance", org.jooq.impl.SQLDataType.VARCHAR(20), this, "账户余额");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.isidentify</code>. 是否实名认证
     */
    public final TableField<FdEbusinessAccountsRecord, String> ISIDENTIFY = createField("isidentify", org.jooq.impl.SQLDataType.VARCHAR(16), this, "是否实名认证");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.register_time</code>. 注册时间
     */
    public final TableField<FdEbusinessAccountsRecord, String> REGISTER_TIME = createField("register_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "注册时间");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.yuebao_balance</code>. 余额宝余额
     */
    public final TableField<FdEbusinessAccountsRecord, String> YUEBAO_BALANCE = createField("yuebao_balance", org.jooq.impl.SQLDataType.VARCHAR(20), this, "余额宝余额");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.available_limit</code>. 可用额度
     */
    public final TableField<FdEbusinessAccountsRecord, String> AVAILABLE_LIMIT = createField("available_limit", org.jooq.impl.SQLDataType.VARCHAR(20), this, "可用额度");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.credit_limit</code>. 额度
     */
    public final TableField<FdEbusinessAccountsRecord, String> CREDIT_LIMIT = createField("credit_limit", org.jooq.impl.SQLDataType.VARCHAR(20), this, "额度");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.repay_day</code>. 还款日
     */
    public final TableField<FdEbusinessAccountsRecord, String> REPAY_DAY = createField("repay_day", org.jooq.impl.SQLDataType.VARCHAR(16), this, "还款日");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.limit</code>. 额度
     */
    public final TableField<FdEbusinessAccountsRecord, String> LIMIT = createField("limit", org.jooq.impl.SQLDataType.VARCHAR(20), this, "额度");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.create_at</code>. 创建时间
     */
    public final TableField<FdEbusinessAccountsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.update_at</code>. 更新时间
     */
    public final TableField<FdEbusinessAccountsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.del_flag</code>. 删除标志
     */
    public final TableField<FdEbusinessAccountsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_ebusiness_accounts.version</code>.
     */
    public final TableField<FdEbusinessAccountsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_ebusiness_accounts</code> table reference
     */
    public FdEbusinessAccounts() {
        this(DSL.name("fd_ebusiness_accounts"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_ebusiness_accounts</code> table reference
     */
    public FdEbusinessAccounts(String alias) {
        this(DSL.name(alias), FD_EBUSINESS_ACCOUNTS);
    }

    /**
     * Create an aliased <code>xbkj.fd_ebusiness_accounts</code> table reference
     */
    public FdEbusinessAccounts(Name alias) {
        this(alias, FD_EBUSINESS_ACCOUNTS);
    }

    private FdEbusinessAccounts(Name alias, Table<FdEbusinessAccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdEbusinessAccounts(Name alias, Table<FdEbusinessAccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "电商账户信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_EBUSINESS_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdEbusinessAccountsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_EBUSINESS_ACCOUNTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdEbusinessAccountsRecord> getPrimaryKey() {
        return Keys.KEY_FD_EBUSINESS_ACCOUNTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdEbusinessAccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<FdEbusinessAccountsRecord>>asList(Keys.KEY_FD_EBUSINESS_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdEbusinessAccounts as(String alias) {
        return new FdEbusinessAccounts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdEbusinessAccounts as(Name alias) {
        return new FdEbusinessAccounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdEbusinessAccounts rename(String name) {
        return new FdEbusinessAccounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdEbusinessAccounts rename(Name name) {
        return new FdEbusinessAccounts(name, null);
    }
}
