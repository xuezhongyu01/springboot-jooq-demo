/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcOrganizationCooperationType;
import com.jooq.domain.enums.UcOrganizationFeeType;
import com.jooq.domain.enums.UcOrganizationStatus;
import com.jooq.domain.tables.records.UcOrganizationRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 机构表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcOrganization extends TableImpl<UcOrganizationRecord> {

    private static final long serialVersionUID = -1507632311;

    /**
     * The reference instance of <code>xbkj.uc_organization</code>
     */
    public static final UcOrganization UC_ORGANIZATION = new UcOrganization();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcOrganizationRecord> getRecordType() {
        return UcOrganizationRecord.class;
    }

    /**
     * The column <code>xbkj.uc_organization.id</code>.
     */
    public final TableField<UcOrganizationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_organization.no</code>. 编号
     */
    public final TableField<UcOrganizationRecord, String> NO = createField("no", org.jooq.impl.SQLDataType.VARCHAR(120), this, "编号");

    /**
     * The column <code>xbkj.uc_organization.yeepay_id</code>. 易宝id
     */
    public final TableField<UcOrganizationRecord, String> YEEPAY_ID = createField("yeepay_id", org.jooq.impl.SQLDataType.VARCHAR(120), this, "易宝id");

    /**
     * The column <code>xbkj.uc_organization.name</code>. 机构名称
     */
    public final TableField<UcOrganizationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(120), this, "机构名称");

    /**
     * The column <code>xbkj.uc_organization.province</code>. 省份
     */
    public final TableField<UcOrganizationRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(255), this, "省份");

    /**
     * The column <code>xbkj.uc_organization.city</code>. 城市
     */
    public final TableField<UcOrganizationRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(120), this, "城市");

    /**
     * The column <code>xbkj.uc_organization.area</code>. 区域
     */
    public final TableField<UcOrganizationRecord, String> AREA = createField("area", org.jooq.impl.SQLDataType.VARCHAR(255), this, "区域");

    /**
     * The column <code>xbkj.uc_organization.address</code>. 详细地址
     */
    public final TableField<UcOrganizationRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "详细地址");

    /**
     * The column <code>xbkj.uc_organization.type</code>. 类型
     */
    public final TableField<UcOrganizationRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(120), this, "类型");

    /**
     * The column <code>xbkj.uc_organization.logo_url</code>. logo地址
     */
    public final TableField<UcOrganizationRecord, String> LOGO_URL = createField("logo_url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "logo地址");

    /**
     * The column <code>xbkj.uc_organization.cooperation_income</code>. 合作收益(只支持小数后4位)
     */
    public final TableField<UcOrganizationRecord, BigDecimal> COOPERATION_INCOME = createField("cooperation_income", org.jooq.impl.SQLDataType.DECIMAL(20, 4).defaultValue(org.jooq.impl.DSL.inline("0.0000", org.jooq.impl.SQLDataType.DECIMAL)), this, "合作收益(只支持小数后4位)");

    /**
     * The column <code>xbkj.uc_organization.cooperation_type</code>. 合作方式：CPA，CPS
     */
    public final TableField<UcOrganizationRecord, UcOrganizationCooperationType> COOPERATION_TYPE = createField("cooperation_type", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false).asEnumDataType(com.jooq.domain.enums.UcOrganizationCooperationType.class), this, "合作方式：CPA，CPS");

    /**
     * The column <code>xbkj.uc_organization.fee_type</code>. 手续费收取 方式-默认商户承担
     */
    public final TableField<UcOrganizationRecord, UcOrganizationFeeType> FEE_TYPE = createField("fee_type", org.jooq.impl.SQLDataType.VARCHAR(6).defaultValue(org.jooq.impl.DSL.inline("TARGET", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.UcOrganizationFeeType.class), this, "手续费收取 方式-默认商户承担");

    /**
     * The column <code>xbkj.uc_organization.shop_num</code>. 门店数
     */
    public final TableField<UcOrganizationRecord, Integer> SHOP_NUM = createField("shop_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "门店数");

    /**
     * The column <code>xbkj.uc_organization.user_num</code>. 累计用户
     */
    public final TableField<UcOrganizationRecord, Integer> USER_NUM = createField("user_num", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "累计用户");

    /**
     * The column <code>xbkj.uc_organization.maintainer</code>. 维护人员
     */
    public final TableField<UcOrganizationRecord, String> MAINTAINER = createField("maintainer", org.jooq.impl.SQLDataType.VARCHAR(60), this, "维护人员");

    /**
     * The column <code>xbkj.uc_organization.maintainer_Id</code>. 维护人员ID
     */
    public final TableField<UcOrganizationRecord, Long> MAINTAINER_ID = createField("maintainer_Id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "维护人员ID");

    /**
     * The column <code>xbkj.uc_organization.telephone</code>. 电话
     */
    public final TableField<UcOrganizationRecord, String> TELEPHONE = createField("telephone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "电话");

    /**
     * The column <code>xbkj.uc_organization.join_date</code>. 加入日期
     */
    public final TableField<UcOrganizationRecord, Timestamp> JOIN_DATE = createField("join_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "加入日期");

    /**
     * The column <code>xbkj.uc_organization.status</code>. 状态：保存，审核中，正常，禁用，其他，审核失败，提交中
     */
    public final TableField<UcOrganizationRecord, UcOrganizationStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("save", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.UcOrganizationStatus.class), this, "状态：保存，审核中，正常，禁用，其他，审核失败，提交中");

    /**
     * The column <code>xbkj.uc_organization.remark</code>. 机构备注
     */
    public final TableField<UcOrganizationRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(180), this, "机构备注");

    /**
     * The column <code>xbkj.uc_organization.deal_count</code>. 累计交易规模
     */
    public final TableField<UcOrganizationRecord, BigDecimal> DEAL_COUNT = createField("deal_count", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "累计交易规模");

    /**
     * The column <code>xbkj.uc_organization.credit_count</code>. 信用分期规模
     */
    public final TableField<UcOrganizationRecord, BigDecimal> CREDIT_COUNT = createField("credit_count", org.jooq.impl.SQLDataType.DECIMAL(20, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "信用分期规模");

    /**
     * The column <code>xbkj.uc_organization.event_record</code>. 调用易宝错误返回信息
     */
    public final TableField<UcOrganizationRecord, String> EVENT_RECORD = createField("event_record", org.jooq.impl.SQLDataType.VARCHAR(180), this, "调用易宝错误返回信息");

    /**
     * The column <code>xbkj.uc_organization.create_at</code>. 创建时间
     */
    public final TableField<UcOrganizationRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_organization.update_at</code>. 更新时间
     */
    public final TableField<UcOrganizationRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_organization.del_flag</code>. 删除标志
     */
    public final TableField<UcOrganizationRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_organization.version</code>.
     */
    public final TableField<UcOrganizationRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_organization</code> table reference
     */
    public UcOrganization() {
        this(DSL.name("uc_organization"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_organization</code> table reference
     */
    public UcOrganization(String alias) {
        this(DSL.name(alias), UC_ORGANIZATION);
    }

    /**
     * Create an aliased <code>xbkj.uc_organization</code> table reference
     */
    public UcOrganization(Name alias) {
        this(alias, UC_ORGANIZATION);
    }

    private UcOrganization(Name alias, Table<UcOrganizationRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcOrganization(Name alias, Table<UcOrganizationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "机构表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_ORGANIZATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcOrganizationRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_ORGANIZATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcOrganizationRecord> getPrimaryKey() {
        return Keys.KEY_UC_ORGANIZATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcOrganizationRecord>> getKeys() {
        return Arrays.<UniqueKey<UcOrganizationRecord>>asList(Keys.KEY_UC_ORGANIZATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcOrganization as(String alias) {
        return new UcOrganization(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcOrganization as(Name alias) {
        return new UcOrganization(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcOrganization rename(String name) {
        return new UcOrganization(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcOrganization rename(Name name) {
        return new UcOrganization(name, null);
    }
}
