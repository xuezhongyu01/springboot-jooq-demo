/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdProviderBillRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 运营商账单表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdProviderBill extends TableImpl<FdProviderBillRecord> {

    private static final long serialVersionUID = 769168533;

    /**
     * The reference instance of <code>xbkj.fd_provider_bill</code>
     */
    public static final FdProviderBill FD_PROVIDER_BILL = new FdProviderBill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdProviderBillRecord> getRecordType() {
        return FdProviderBillRecord.class;
    }

    /**
     * The column <code>xbkj.fd_provider_bill.id</code>. 主键
     */
    public final TableField<FdProviderBillRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键");

    /**
     * The column <code>xbkj.fd_provider_bill.account_id</code>. 账户id
     */
    public final TableField<FdProviderBillRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "账户id");

    /**
     * The column <code>xbkj.fd_provider_bill.phone</code>. 手机号
     */
    public final TableField<FdProviderBillRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(32), this, "手机号");

    /**
     * The column <code>xbkj.fd_provider_bill.charge_begin</code>. 计费开始时间
     */
    public final TableField<FdProviderBillRecord, String> CHARGE_BEGIN = createField("charge_begin", org.jooq.impl.SQLDataType.VARCHAR(255), this, "计费开始时间");

    /**
     * The column <code>xbkj.fd_provider_bill.charge_end</code>. 计费结束时间
     */
    public final TableField<FdProviderBillRecord, String> CHARGE_END = createField("charge_end", org.jooq.impl.SQLDataType.VARCHAR(255), this, "计费结束时间");

    /**
     * The column <code>xbkj.fd_provider_bill.plan_amount</code>. 套餐金额(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> PLAN_AMOUNT = createField("plan_amount", org.jooq.impl.SQLDataType.VARCHAR(20), this, "套餐金额(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.fixed_expenses</code>. 固定费用(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> FIXED_EXPENSES = createField("fixed_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "固定费用(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.voice_expenses</code>. 语音通信费用(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> VOICE_EXPENSES = createField("voice_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "语音通信费用(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.net_expenses</code>. 上网费用(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> NET_EXPENSES = createField("net_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "上网费用(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.mms_expenses</code>. 短彩信费用(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> MMS_EXPENSES = createField("mms_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "短彩信费用(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.added_expenses</code>. 增值业务费(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> ADDED_EXPENSES = createField("added_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "增值业务费(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.collection_expenses</code>. 代收费(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> COLLECTION_EXPENSES = createField("collection_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "代收费(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.other_expenses</code>. 其他费用(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> OTHER_EXPENSES = createField("other_expenses", org.jooq.impl.SQLDataType.VARCHAR(20), this, "其他费用(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.total_amount</code>. 消费总金额(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> TOTAL_AMOUNT = createField("total_amount", org.jooq.impl.SQLDataType.VARCHAR(20), this, "消费总金额(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.pay_amount</code>. 实缴金额(单位：分)
     */
    public final TableField<FdProviderBillRecord, String> PAY_AMOUNT = createField("pay_amount", org.jooq.impl.SQLDataType.VARCHAR(20), this, "实缴金额(单位：分)");

    /**
     * The column <code>xbkj.fd_provider_bill.create_at</code>. 创建时间
     */
    public final TableField<FdProviderBillRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_provider_bill.update_at</code>. 更新时间
     */
    public final TableField<FdProviderBillRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_provider_bill.del_flag</code>. 删除标志
     */
    public final TableField<FdProviderBillRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_provider_bill.version</code>.
     */
    public final TableField<FdProviderBillRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_provider_bill</code> table reference
     */
    public FdProviderBill() {
        this(DSL.name("fd_provider_bill"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_bill</code> table reference
     */
    public FdProviderBill(String alias) {
        this(DSL.name(alias), FD_PROVIDER_BILL);
    }

    /**
     * Create an aliased <code>xbkj.fd_provider_bill</code> table reference
     */
    public FdProviderBill(Name alias) {
        this(alias, FD_PROVIDER_BILL);
    }

    private FdProviderBill(Name alias, Table<FdProviderBillRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdProviderBill(Name alias, Table<FdProviderBillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "运营商账单表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_PROVIDER_BILL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdProviderBillRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_PROVIDER_BILL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdProviderBillRecord> getPrimaryKey() {
        return Keys.KEY_FD_PROVIDER_BILL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdProviderBillRecord>> getKeys() {
        return Arrays.<UniqueKey<FdProviderBillRecord>>asList(Keys.KEY_FD_PROVIDER_BILL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderBill as(String alias) {
        return new FdProviderBill(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdProviderBill as(Name alias) {
        return new FdProviderBill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderBill rename(String name) {
        return new FdProviderBill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdProviderBill rename(Name name) {
        return new FdProviderBill(name, null);
    }
}
