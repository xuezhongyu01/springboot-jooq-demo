/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcShopTeacherStatus;
import com.jooq.domain.tables.records.UcShopTeacherRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 教师列表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcShopTeacher extends TableImpl<UcShopTeacherRecord> {

    private static final long serialVersionUID = 8779502;

    /**
     * The reference instance of <code>xbkj.uc_shop_teacher</code>
     */
    public static final UcShopTeacher UC_SHOP_TEACHER = new UcShopTeacher();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcShopTeacherRecord> getRecordType() {
        return UcShopTeacherRecord.class;
    }

    /**
     * The column <code>xbkj.uc_shop_teacher.id</code>. id
     */
    public final TableField<UcShopTeacherRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>xbkj.uc_shop_teacher.shop_id</code>. 门店id
     */
    public final TableField<UcShopTeacherRecord, Long> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "门店id");

    /**
     * The column <code>xbkj.uc_shop_teacher.name</code>. 名字
     */
    public final TableField<UcShopTeacherRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "名字");

    /**
     * The column <code>xbkj.uc_shop_teacher.head_url</code>. 头像
     */
    public final TableField<UcShopTeacherRecord, String> HEAD_URL = createField("head_url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "头像");

    /**
     * The column <code>xbkj.uc_shop_teacher.professional_title</code>. 职称
     */
    public final TableField<UcShopTeacherRecord, String> PROFESSIONAL_TITLE = createField("professional_title", org.jooq.impl.SQLDataType.VARCHAR(255), this, "职称");

    /**
     * The column <code>xbkj.uc_shop_teacher.status</code>. 状态：保存，审核中，正常，禁用，其他
     */
    public final TableField<UcShopTeacherRecord, UcShopTeacherStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(8).asEnumDataType(com.jooq.domain.enums.UcShopTeacherStatus.class), this, "状态：保存，审核中，正常，禁用，其他");

    /**
     * The column <code>xbkj.uc_shop_teacher.infro</code>. 简介
     */
    public final TableField<UcShopTeacherRecord, String> INFRO = createField("infro", org.jooq.impl.SQLDataType.CLOB, this, "简介");

    /**
     * The column <code>xbkj.uc_shop_teacher.detail_intro</code>. 详细介绍
     */
    public final TableField<UcShopTeacherRecord, String> DETAIL_INTRO = createField("detail_intro", org.jooq.impl.SQLDataType.CLOB, this, "详细介绍");

    /**
     * The column <code>xbkj.uc_shop_teacher.create_at</code>. 创建时间
     */
    public final TableField<UcShopTeacherRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_shop_teacher.update_at</code>. 更新时间
     */
    public final TableField<UcShopTeacherRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_shop_teacher.del_flag</code>. 删除标志
     */
    public final TableField<UcShopTeacherRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_shop_teacher.version</code>.
     */
    public final TableField<UcShopTeacherRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_shop_teacher</code> table reference
     */
    public UcShopTeacher() {
        this(DSL.name("uc_shop_teacher"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_shop_teacher</code> table reference
     */
    public UcShopTeacher(String alias) {
        this(DSL.name(alias), UC_SHOP_TEACHER);
    }

    /**
     * Create an aliased <code>xbkj.uc_shop_teacher</code> table reference
     */
    public UcShopTeacher(Name alias) {
        this(alias, UC_SHOP_TEACHER);
    }

    private UcShopTeacher(Name alias, Table<UcShopTeacherRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcShopTeacher(Name alias, Table<UcShopTeacherRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "教师列表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_SHOP_TEACHER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcShopTeacherRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_SHOP_TEACHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcShopTeacherRecord> getPrimaryKey() {
        return Keys.KEY_UC_SHOP_TEACHER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcShopTeacherRecord>> getKeys() {
        return Arrays.<UniqueKey<UcShopTeacherRecord>>asList(Keys.KEY_UC_SHOP_TEACHER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcShopTeacher as(String alias) {
        return new UcShopTeacher(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcShopTeacher as(Name alias) {
        return new UcShopTeacher(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcShopTeacher rename(String name) {
        return new UcShopTeacher(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcShopTeacher rename(Name name) {
        return new UcShopTeacher(name, null);
    }
}
