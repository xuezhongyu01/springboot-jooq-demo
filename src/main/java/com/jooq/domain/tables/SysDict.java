/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.SysDictStatus;
import com.jooq.domain.tables.records.SysDictRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysDict extends TableImpl<SysDictRecord> {

    private static final long serialVersionUID = 1996780509;

    /**
     * The reference instance of <code>xbkj.sys_dict</code>
     */
    public static final SysDict SYS_DICT = new SysDict();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SysDictRecord> getRecordType() {
        return SysDictRecord.class;
    }

    /**
     * The column <code>xbkj.sys_dict.id</code>.
     */
    public final TableField<SysDictRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.sys_dict.label</code>. 标签名
     */
    public final TableField<SysDictRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "标签名");

    /**
     * The column <code>xbkj.sys_dict.group_name</code>. 组名
     */
    public final TableField<SysDictRecord, String> GROUP_NAME = createField("group_name", org.jooq.impl.SQLDataType.VARCHAR(256), this, "组名");

    /**
     * The column <code>xbkj.sys_dict.key</code>. key
     */
    public final TableField<SysDictRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "key");

    /**
     * The column <code>xbkj.sys_dict.value</code>. 数据值
     */
    public final TableField<SysDictRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "数据值");

    /**
     * The column <code>xbkj.sys_dict.description</code>. 描述
     */
    public final TableField<SysDictRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "描述");

    /**
     * The column <code>xbkj.sys_dict.sort</code>. 排序
     */
    public final TableField<SysDictRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "排序");

    /**
     * The column <code>xbkj.sys_dict.status</code>.
     */
    public final TableField<SysDictRecord, SysDictStatus> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false).defaultValue(org.jooq.impl.DSL.inline("enable", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.SysDictStatus.class), this, "");

    /**
     * The column <code>xbkj.sys_dict.create_at</code>. 创建时间
     */
    public final TableField<SysDictRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.sys_dict.update_at</code>. 更新时间
     */
    public final TableField<SysDictRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.sys_dict.remarks</code>. 备注
     */
    public final TableField<SysDictRecord, String> REMARKS = createField("remarks", org.jooq.impl.SQLDataType.VARCHAR(256), this, "备注");

    /**
     * The column <code>xbkj.sys_dict.del_flag</code>. 删除标记
     */
    public final TableField<SysDictRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标记");

    /**
     * The column <code>xbkj.sys_dict.version</code>.
     */
    public final TableField<SysDictRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>xbkj.sys_dict</code> table reference
     */
    public SysDict() {
        this(DSL.name("sys_dict"), null);
    }

    /**
     * Create an aliased <code>xbkj.sys_dict</code> table reference
     */
    public SysDict(String alias) {
        this(DSL.name(alias), SYS_DICT);
    }

    /**
     * Create an aliased <code>xbkj.sys_dict</code> table reference
     */
    public SysDict(Name alias) {
        this(alias, SYS_DICT);
    }

    private SysDict(Name alias, Table<SysDictRecord> aliased) {
        this(alias, aliased, null);
    }

    private SysDict(Name alias, Table<SysDictRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "字典表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SYS_DICT_PRIMARY, Indexes.SYS_DICT_SYS_DICT_GROUPNAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SysDictRecord, Long> getIdentity() {
        return Keys.IDENTITY_SYS_DICT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SysDictRecord> getPrimaryKey() {
        return Keys.KEY_SYS_DICT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SysDictRecord>> getKeys() {
        return Arrays.<UniqueKey<SysDictRecord>>asList(Keys.KEY_SYS_DICT_PRIMARY, Keys.KEY_SYS_DICT_SYS_DICT_GROUPNAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDict as(String alias) {
        return new SysDict(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SysDict as(Name alias) {
        return new SysDict(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDict rename(String name) {
        return new SysDict(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SysDict rename(Name name) {
        return new SysDict(name, null);
    }
}
