/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.FinBalanceBalanceType;
import com.jooq.domain.tables.records.FinBalanceRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 成长基金总额度
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FinBalance extends TableImpl<FinBalanceRecord> {

    private static final long serialVersionUID = 1915828458;

    /**
     * The reference instance of <code>xbkj.fin_balance</code>
     */
    public static final FinBalance FIN_BALANCE = new FinBalance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FinBalanceRecord> getRecordType() {
        return FinBalanceRecord.class;
    }

    /**
     * The column <code>xbkj.fin_balance.id</code>.
     */
    public final TableField<FinBalanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.fin_balance.balance_type</code>. 类型：会员额度，会员积分，机构金额
     */
    public final TableField<FinBalanceRecord, FinBalanceBalanceType> BALANCE_TYPE = createField("balance_type", org.jooq.impl.SQLDataType.VARCHAR(12).nullable(false).defaultValue(org.jooq.impl.DSL.inline("member_amout", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.FinBalanceBalanceType.class), this, "类型：会员额度，会员积分，机构金额");

    /**
     * The column <code>xbkj.fin_balance.credit_total_amount</code>. 成长基金总额度
     */
    public final TableField<FinBalanceRecord, BigDecimal> CREDIT_TOTAL_AMOUNT = createField("credit_total_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "成长基金总额度");

    /**
     * The column <code>xbkj.fin_balance.credit_frozen_amount</code>. 冻结金额
     */
    public final TableField<FinBalanceRecord, BigDecimal> CREDIT_FROZEN_AMOUNT = createField("credit_frozen_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "冻结金额");

    /**
     * The column <code>xbkj.fin_balance.credit_available_amount</code>. 可用额度
     */
    public final TableField<FinBalanceRecord, BigDecimal> CREDIT_AVAILABLE_AMOUNT = createField("credit_available_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "可用额度");

    /**
     * The column <code>xbkj.fin_balance.use_amount</code>. 已使用额度
     */
    public final TableField<FinBalanceRecord, BigDecimal> USE_AMOUNT = createField("use_amount", org.jooq.impl.SQLDataType.DECIMAL(20, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "已使用额度");

    /**
     * The column <code>xbkj.fin_balance.source_id</code>. 用户标识
     */
    public final TableField<FinBalanceRecord, Long> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户标识");

    /**
     * The column <code>xbkj.fin_balance.create_at</code>. 创建时间
     */
    public final TableField<FinBalanceRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fin_balance.update_at</code>. 更新时间
     */
    public final TableField<FinBalanceRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fin_balance.del_flag</code>. 删除标志
     */
    public final TableField<FinBalanceRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fin_balance.version</code>.
     */
    public final TableField<FinBalanceRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fin_balance</code> table reference
     */
    public FinBalance() {
        this(DSL.name("fin_balance"), null);
    }

    /**
     * Create an aliased <code>xbkj.fin_balance</code> table reference
     */
    public FinBalance(String alias) {
        this(DSL.name(alias), FIN_BALANCE);
    }

    /**
     * Create an aliased <code>xbkj.fin_balance</code> table reference
     */
    public FinBalance(Name alias) {
        this(alias, FIN_BALANCE);
    }

    private FinBalance(Name alias, Table<FinBalanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private FinBalance(Name alias, Table<FinBalanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "成长基金总额度");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FIN_BALANCE_INDEX_BALANCE_SOURCE, Indexes.FIN_BALANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FinBalanceRecord, Long> getIdentity() {
        return Keys.IDENTITY_FIN_BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FinBalanceRecord> getPrimaryKey() {
        return Keys.KEY_FIN_BALANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FinBalanceRecord>> getKeys() {
        return Arrays.<UniqueKey<FinBalanceRecord>>asList(Keys.KEY_FIN_BALANCE_PRIMARY, Keys.KEY_FIN_BALANCE_INDEX_BALANCE_SOURCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinBalance as(String alias) {
        return new FinBalance(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinBalance as(Name alias) {
        return new FinBalance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FinBalance rename(String name) {
        return new FinBalance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FinBalance rename(Name name) {
        return new FinBalance(name, null);
    }
}
