/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.tables.records.FdReportFundFlowsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 公积金数据报告账户流水
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FdReportFundFlows extends TableImpl<FdReportFundFlowsRecord> {

    private static final long serialVersionUID = -516449150;

    /**
     * The reference instance of <code>xbkj.fd_report_fund_flows</code>
     */
    public static final FdReportFundFlows FD_REPORT_FUND_FLOWS = new FdReportFundFlows();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FdReportFundFlowsRecord> getRecordType() {
        return FdReportFundFlowsRecord.class;
    }

    /**
     * The column <code>xbkj.fd_report_fund_flows.id</code>.
     */
    public final TableField<FdReportFundFlowsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.fd_report_fund_flows.report_fund_id</code>.
     */
    public final TableField<FdReportFundFlowsRecord, Long> REPORT_FUND_ID = createField("report_fund_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xbkj.fd_report_fund_flows.company</code>. 公司名称
     */
    public final TableField<FdReportFundFlowsRecord, String> COMPANY = createField("company", org.jooq.impl.SQLDataType.VARCHAR(128), this, "公司名称");

    /**
     * The column <code>xbkj.fd_report_fund_flows.operation_date</code>. 操作日期(
     */
    public final TableField<FdReportFundFlowsRecord, Timestamp> OPERATION_DATE = createField("operation_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "操作日期(");

    /**
     * The column <code>xbkj.fd_report_fund_flows.operation_type</code>. 操作类型
     */
    public final TableField<FdReportFundFlowsRecord, String> OPERATION_TYPE = createField("operation_type", org.jooq.impl.SQLDataType.VARCHAR(128), this, "操作类型");

    /**
     * The column <code>xbkj.fd_report_fund_flows.record_month</code>. 缴纳月份
     */
    public final TableField<FdReportFundFlowsRecord, String> RECORD_MONTH = createField("record_month", org.jooq.impl.SQLDataType.VARCHAR(20), this, "缴纳月份");

    /**
     * The column <code>xbkj.fd_report_fund_flows.amount</code>.  金额(分)
     */
    public final TableField<FdReportFundFlowsRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(11, 2), this, " 金额(分)");

    /**
     * The column <code>xbkj.fd_report_fund_flows.balance</code>.  余额(分)
     */
    public final TableField<FdReportFundFlowsRecord, BigDecimal> BALANCE = createField("balance", org.jooq.impl.SQLDataType.DECIMAL(11, 2), this, " 余额(分)");

    /**
     * The column <code>xbkj.fd_report_fund_flows.create_at</code>. 创建时间
     */
    public final TableField<FdReportFundFlowsRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.fd_report_fund_flows.update_at</code>. 更新时间
     */
    public final TableField<FdReportFundFlowsRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.fd_report_fund_flows.del_flag</code>. 删除标志
     */
    public final TableField<FdReportFundFlowsRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.fd_report_fund_flows.version</code>.
     */
    public final TableField<FdReportFundFlowsRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.fd_report_fund_flows</code> table reference
     */
    public FdReportFundFlows() {
        this(DSL.name("fd_report_fund_flows"), null);
    }

    /**
     * Create an aliased <code>xbkj.fd_report_fund_flows</code> table reference
     */
    public FdReportFundFlows(String alias) {
        this(DSL.name(alias), FD_REPORT_FUND_FLOWS);
    }

    /**
     * Create an aliased <code>xbkj.fd_report_fund_flows</code> table reference
     */
    public FdReportFundFlows(Name alias) {
        this(alias, FD_REPORT_FUND_FLOWS);
    }

    private FdReportFundFlows(Name alias, Table<FdReportFundFlowsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FdReportFundFlows(Name alias, Table<FdReportFundFlowsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "公积金数据报告账户流水");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FD_REPORT_FUND_FLOWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FdReportFundFlowsRecord, Long> getIdentity() {
        return Keys.IDENTITY_FD_REPORT_FUND_FLOWS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FdReportFundFlowsRecord> getPrimaryKey() {
        return Keys.KEY_FD_REPORT_FUND_FLOWS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FdReportFundFlowsRecord>> getKeys() {
        return Arrays.<UniqueKey<FdReportFundFlowsRecord>>asList(Keys.KEY_FD_REPORT_FUND_FLOWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdReportFundFlows as(String alias) {
        return new FdReportFundFlows(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FdReportFundFlows as(Name alias) {
        return new FdReportFundFlows(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FdReportFundFlows rename(String name) {
        return new FdReportFundFlows(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FdReportFundFlows rename(Name name) {
        return new FdReportFundFlows(name, null);
    }
}
