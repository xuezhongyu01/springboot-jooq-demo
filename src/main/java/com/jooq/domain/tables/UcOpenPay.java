/*
 * This file is generated by jOOQ.
*/
package com.jooq.domain.tables;


import com.jooq.domain.Indexes;
import com.jooq.domain.Keys;
import com.jooq.domain.Xbkj;
import com.jooq.domain.enums.UcOpenPayCardType;
import com.jooq.domain.enums.UcOpenPayType;
import com.jooq.domain.tables.records.UcOpenPayRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 机构或者门店 开通线下支付需要资料
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UcOpenPay extends TableImpl<UcOpenPayRecord> {

    private static final long serialVersionUID = 925017462;

    /**
     * The reference instance of <code>xbkj.uc_open_pay</code>
     */
    public static final UcOpenPay UC_OPEN_PAY = new UcOpenPay();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UcOpenPayRecord> getRecordType() {
        return UcOpenPayRecord.class;
    }

    /**
     * The column <code>xbkj.uc_open_pay.id</code>.
     */
    public final TableField<UcOpenPayRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>xbkj.uc_open_pay.type</code>. 会员，机构，单店,资产方uc_id=0
     */
    public final TableField<UcOpenPayRecord, UcOpenPayType> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(5).nullable(false).defaultValue(org.jooq.impl.DSL.inline("organ", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(com.jooq.domain.enums.UcOpenPayType.class), this, "会员，机构，单店,资产方uc_id=0");

    /**
     * The column <code>xbkj.uc_open_pay.source_id</code>. 来源id
     */
    public final TableField<UcOpenPayRecord, Long> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "来源id");

    /**
     * The column <code>xbkj.uc_open_pay.id_card</code>. 身份证号
     */
    public final TableField<UcOpenPayRecord, String> ID_CARD = createField("id_card", org.jooq.impl.SQLDataType.VARCHAR(50), this, "身份证号");

    /**
     * The column <code>xbkj.uc_open_pay.business_licence</code>. 营业执照号码
     */
    public final TableField<UcOpenPayRecord, String> BUSINESS_LICENCE = createField("business_licence", org.jooq.impl.SQLDataType.VARCHAR(50), this, "营业执照号码");

    /**
     * The column <code>xbkj.uc_open_pay.legal_person</code>. 法人姓名
     */
    public final TableField<UcOpenPayRecord, String> LEGAL_PERSON = createField("legal_person", org.jooq.impl.SQLDataType.VARCHAR(50), this, "法人姓名");

    /**
     * The column <code>xbkj.uc_open_pay.account_name</code>. 户名
     */
    public final TableField<UcOpenPayRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "户名");

    /**
     * The column <code>xbkj.uc_open_pay.linkman</code>. 联系人姓名
     */
    public final TableField<UcOpenPayRecord, String> LINKMAN = createField("linkman", org.jooq.impl.SQLDataType.VARCHAR(50), this, "联系人姓名");

    /**
     * The column <code>xbkj.uc_open_pay.card_type</code>. 对公，对私
     */
    public final TableField<UcOpenPayRecord, UcOpenPayCardType> CARD_TYPE = createField("card_type", org.jooq.impl.SQLDataType.VARCHAR(11).nullable(false).asEnumDataType(com.jooq.domain.enums.UcOpenPayCardType.class), this, "对公，对私");

    /**
     * The column <code>xbkj.uc_open_pay.create_at</code>. 创建时间
     */
    public final TableField<UcOpenPayRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>xbkj.uc_open_pay.update_at</code>. 更新时间
     */
    public final TableField<UcOpenPayRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>xbkj.uc_open_pay.del_flag</code>. 删除标志
     */
    public final TableField<UcOpenPayRecord, Boolean> DEL_FLAG = createField("del_flag", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "删除标志");

    /**
     * The column <code>xbkj.uc_open_pay.version</code>.
     */
    public final TableField<UcOpenPayRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>xbkj.uc_open_pay</code> table reference
     */
    public UcOpenPay() {
        this(DSL.name("uc_open_pay"), null);
    }

    /**
     * Create an aliased <code>xbkj.uc_open_pay</code> table reference
     */
    public UcOpenPay(String alias) {
        this(DSL.name(alias), UC_OPEN_PAY);
    }

    /**
     * Create an aliased <code>xbkj.uc_open_pay</code> table reference
     */
    public UcOpenPay(Name alias) {
        this(alias, UC_OPEN_PAY);
    }

    private UcOpenPay(Name alias, Table<UcOpenPayRecord> aliased) {
        this(alias, aliased, null);
    }

    private UcOpenPay(Name alias, Table<UcOpenPayRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "机构或者门店 开通线下支付需要资料");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xbkj.XBKJ;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UC_OPEN_PAY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UcOpenPayRecord, Long> getIdentity() {
        return Keys.IDENTITY_UC_OPEN_PAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UcOpenPayRecord> getPrimaryKey() {
        return Keys.KEY_UC_OPEN_PAY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UcOpenPayRecord>> getKeys() {
        return Arrays.<UniqueKey<UcOpenPayRecord>>asList(Keys.KEY_UC_OPEN_PAY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcOpenPay as(String alias) {
        return new UcOpenPay(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UcOpenPay as(Name alias) {
        return new UcOpenPay(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UcOpenPay rename(String name) {
        return new UcOpenPay(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UcOpenPay rename(Name name) {
        return new UcOpenPay(name, null);
    }
}
